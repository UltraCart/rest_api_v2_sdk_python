# coding: utf-8

"""
    UltraCart Rest API V2

    This is the next generation UltraCart REST API...

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class ItemEbay(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, active=None, category_id=None, category_specifics=None, condition_description=None, condition_id=None, consecutive_failures=None, custom_category1=None, custom_category2=None, dispatch_time_max=None, domestic_1_additional_cost=None, domestic_1_first_cost=None, domestic_2_additional_cost=None, domestic_2_first_cost=None, domestic_3_additional_cost=None, domestic_3_first_cost=None, domestic_4_additional_cost=None, domestic_4_first_cost=None, ebay_auction_id=None, ebay_specific_inventory=None, ebay_template_name=None, ebay_template_oid=None, end_time=None, free_shipping=None, free_shipping_method=None, international_1_additional_cost=None, international_1_first_cost=None, international_2_additional_cost=None, international_2_first_cost=None, international_3_additional_cost=None, international_3_first_cost=None, international_4_additional_cost=None, international_4_first_cost=None, last_status_dts=None, listed_dispatch_time_max=None, listed_ebay_template_oid=None, listing_dts=None, listing_duration=None, listing_price=None, listing_price_override=None, listing_type=None, marketplace_analysis=None, marketplace_analysis_perform=None, marketplace_final_value_fee_percentage=None, marketplace_last_check_dts=None, marketplace_lowest=None, marketplace_map_violation=None, marketplace_multiplier=None, marketplace_other_price=None, marketplace_other_seller=None, marketplace_other_shipping=None, marketplace_other_total=None, marketplace_our_additional_profit_potential=None, marketplace_our_price=None, marketplace_our_profit=None, marketplace_our_shipping=None, marketplace_our_total=None, marketplace_overhead=None, marketplace_profitable=None, next_attemp_dts=None, next_listing_duration=None, no_promotional_shipping=None, packaging_handling_costs=None, previous_ebay_auction_id=None, quantity=None, reserve_price=None, send_dimensions_and_weight=None, start_time=None, status=None, target_dispatch_time_max=None):
        """
        ItemEbay - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'active': 'bool',
            'category_id': 'int',
            'category_specifics': 'list[ItemEbayCategorySpecific]',
            'condition_description': 'str',
            'condition_id': 'int',
            'consecutive_failures': 'int',
            'custom_category1': 'int',
            'custom_category2': 'int',
            'dispatch_time_max': 'int',
            'domestic_1_additional_cost': 'float',
            'domestic_1_first_cost': 'float',
            'domestic_2_additional_cost': 'float',
            'domestic_2_first_cost': 'float',
            'domestic_3_additional_cost': 'float',
            'domestic_3_first_cost': 'float',
            'domestic_4_additional_cost': 'float',
            'domestic_4_first_cost': 'float',
            'ebay_auction_id': 'str',
            'ebay_specific_inventory': 'int',
            'ebay_template_name': 'str',
            'ebay_template_oid': 'int',
            'end_time': 'str',
            'free_shipping': 'bool',
            'free_shipping_method': 'str',
            'international_1_additional_cost': 'float',
            'international_1_first_cost': 'float',
            'international_2_additional_cost': 'float',
            'international_2_first_cost': 'float',
            'international_3_additional_cost': 'float',
            'international_3_first_cost': 'float',
            'international_4_additional_cost': 'float',
            'international_4_first_cost': 'float',
            'last_status_dts': 'str',
            'listed_dispatch_time_max': 'int',
            'listed_ebay_template_oid': 'int',
            'listing_dts': 'str',
            'listing_duration': 'str',
            'listing_price': 'float',
            'listing_price_override': 'float',
            'listing_type': 'str',
            'marketplace_analysis': 'ItemEbayMarketPlaceAnalysis',
            'marketplace_analysis_perform': 'bool',
            'marketplace_final_value_fee_percentage': 'float',
            'marketplace_last_check_dts': 'str',
            'marketplace_lowest': 'bool',
            'marketplace_map_violation': 'bool',
            'marketplace_multiplier': 'float',
            'marketplace_other_price': 'float',
            'marketplace_other_seller': 'str',
            'marketplace_other_shipping': 'float',
            'marketplace_other_total': 'float',
            'marketplace_our_additional_profit_potential': 'float',
            'marketplace_our_price': 'float',
            'marketplace_our_profit': 'float',
            'marketplace_our_shipping': 'float',
            'marketplace_our_total': 'float',
            'marketplace_overhead': 'float',
            'marketplace_profitable': 'bool',
            'next_attemp_dts': 'str',
            'next_listing_duration': 'str',
            'no_promotional_shipping': 'bool',
            'packaging_handling_costs': 'float',
            'previous_ebay_auction_id': 'str',
            'quantity': 'int',
            'reserve_price': 'float',
            'send_dimensions_and_weight': 'str',
            'start_time': 'str',
            'status': 'str',
            'target_dispatch_time_max': 'int'
        }

        self.attribute_map = {
            'active': 'active',
            'category_id': 'category_id',
            'category_specifics': 'category_specifics',
            'condition_description': 'condition_description',
            'condition_id': 'condition_id',
            'consecutive_failures': 'consecutive_failures',
            'custom_category1': 'custom_category1',
            'custom_category2': 'custom_category2',
            'dispatch_time_max': 'dispatch_time_max',
            'domestic_1_additional_cost': 'domestic_1_additional_cost',
            'domestic_1_first_cost': 'domestic_1_first_cost',
            'domestic_2_additional_cost': 'domestic_2_additional_cost',
            'domestic_2_first_cost': 'domestic_2_first_cost',
            'domestic_3_additional_cost': 'domestic_3_additional_cost',
            'domestic_3_first_cost': 'domestic_3_first_cost',
            'domestic_4_additional_cost': 'domestic_4_additional_cost',
            'domestic_4_first_cost': 'domestic_4_first_cost',
            'ebay_auction_id': 'ebay_auction_id',
            'ebay_specific_inventory': 'ebay_specific_inventory',
            'ebay_template_name': 'ebay_template_name',
            'ebay_template_oid': 'ebay_template_oid',
            'end_time': 'end_time',
            'free_shipping': 'free_shipping',
            'free_shipping_method': 'free_shipping_method',
            'international_1_additional_cost': 'international_1_additional_cost',
            'international_1_first_cost': 'international_1_first_cost',
            'international_2_additional_cost': 'international_2_additional_cost',
            'international_2_first_cost': 'international_2_first_cost',
            'international_3_additional_cost': 'international_3_additional_cost',
            'international_3_first_cost': 'international_3_first_cost',
            'international_4_additional_cost': 'international_4_additional_cost',
            'international_4_first_cost': 'international_4_first_cost',
            'last_status_dts': 'last_status_dts',
            'listed_dispatch_time_max': 'listed_dispatch_time_max',
            'listed_ebay_template_oid': 'listed_ebay_template_oid',
            'listing_dts': 'listing_dts',
            'listing_duration': 'listing_duration',
            'listing_price': 'listing_price',
            'listing_price_override': 'listing_price_override',
            'listing_type': 'listing_type',
            'marketplace_analysis': 'marketplace_analysis',
            'marketplace_analysis_perform': 'marketplace_analysis_perform',
            'marketplace_final_value_fee_percentage': 'marketplace_final_value_fee_percentage',
            'marketplace_last_check_dts': 'marketplace_last_check_dts',
            'marketplace_lowest': 'marketplace_lowest',
            'marketplace_map_violation': 'marketplace_map_violation',
            'marketplace_multiplier': 'marketplace_multiplier',
            'marketplace_other_price': 'marketplace_other_price',
            'marketplace_other_seller': 'marketplace_other_seller',
            'marketplace_other_shipping': 'marketplace_other_shipping',
            'marketplace_other_total': 'marketplace_other_total',
            'marketplace_our_additional_profit_potential': 'marketplace_our_additional_profit_potential',
            'marketplace_our_price': 'marketplace_our_price',
            'marketplace_our_profit': 'marketplace_our_profit',
            'marketplace_our_shipping': 'marketplace_our_shipping',
            'marketplace_our_total': 'marketplace_our_total',
            'marketplace_overhead': 'marketplace_overhead',
            'marketplace_profitable': 'marketplace_profitable',
            'next_attemp_dts': 'next_attemp_dts',
            'next_listing_duration': 'next_listing_duration',
            'no_promotional_shipping': 'no_promotional_shipping',
            'packaging_handling_costs': 'packaging_handling_costs',
            'previous_ebay_auction_id': 'previous_ebay_auction_id',
            'quantity': 'quantity',
            'reserve_price': 'reserve_price',
            'send_dimensions_and_weight': 'send_dimensions_and_weight',
            'start_time': 'start_time',
            'status': 'status',
            'target_dispatch_time_max': 'target_dispatch_time_max'
        }

        self._active = active
        self._category_id = category_id
        self._category_specifics = category_specifics
        self._condition_description = condition_description
        self._condition_id = condition_id
        self._consecutive_failures = consecutive_failures
        self._custom_category1 = custom_category1
        self._custom_category2 = custom_category2
        self._dispatch_time_max = dispatch_time_max
        self._domestic_1_additional_cost = domestic_1_additional_cost
        self._domestic_1_first_cost = domestic_1_first_cost
        self._domestic_2_additional_cost = domestic_2_additional_cost
        self._domestic_2_first_cost = domestic_2_first_cost
        self._domestic_3_additional_cost = domestic_3_additional_cost
        self._domestic_3_first_cost = domestic_3_first_cost
        self._domestic_4_additional_cost = domestic_4_additional_cost
        self._domestic_4_first_cost = domestic_4_first_cost
        self._ebay_auction_id = ebay_auction_id
        self._ebay_specific_inventory = ebay_specific_inventory
        self._ebay_template_name = ebay_template_name
        self._ebay_template_oid = ebay_template_oid
        self._end_time = end_time
        self._free_shipping = free_shipping
        self._free_shipping_method = free_shipping_method
        self._international_1_additional_cost = international_1_additional_cost
        self._international_1_first_cost = international_1_first_cost
        self._international_2_additional_cost = international_2_additional_cost
        self._international_2_first_cost = international_2_first_cost
        self._international_3_additional_cost = international_3_additional_cost
        self._international_3_first_cost = international_3_first_cost
        self._international_4_additional_cost = international_4_additional_cost
        self._international_4_first_cost = international_4_first_cost
        self._last_status_dts = last_status_dts
        self._listed_dispatch_time_max = listed_dispatch_time_max
        self._listed_ebay_template_oid = listed_ebay_template_oid
        self._listing_dts = listing_dts
        self._listing_duration = listing_duration
        self._listing_price = listing_price
        self._listing_price_override = listing_price_override
        self._listing_type = listing_type
        self._marketplace_analysis = marketplace_analysis
        self._marketplace_analysis_perform = marketplace_analysis_perform
        self._marketplace_final_value_fee_percentage = marketplace_final_value_fee_percentage
        self._marketplace_last_check_dts = marketplace_last_check_dts
        self._marketplace_lowest = marketplace_lowest
        self._marketplace_map_violation = marketplace_map_violation
        self._marketplace_multiplier = marketplace_multiplier
        self._marketplace_other_price = marketplace_other_price
        self._marketplace_other_seller = marketplace_other_seller
        self._marketplace_other_shipping = marketplace_other_shipping
        self._marketplace_other_total = marketplace_other_total
        self._marketplace_our_additional_profit_potential = marketplace_our_additional_profit_potential
        self._marketplace_our_price = marketplace_our_price
        self._marketplace_our_profit = marketplace_our_profit
        self._marketplace_our_shipping = marketplace_our_shipping
        self._marketplace_our_total = marketplace_our_total
        self._marketplace_overhead = marketplace_overhead
        self._marketplace_profitable = marketplace_profitable
        self._next_attemp_dts = next_attemp_dts
        self._next_listing_duration = next_listing_duration
        self._no_promotional_shipping = no_promotional_shipping
        self._packaging_handling_costs = packaging_handling_costs
        self._previous_ebay_auction_id = previous_ebay_auction_id
        self._quantity = quantity
        self._reserve_price = reserve_price
        self._send_dimensions_and_weight = send_dimensions_and_weight
        self._start_time = start_time
        self._status = status
        self._target_dispatch_time_max = target_dispatch_time_max

    @property
    def active(self):
        """
        Gets the active of this ItemEbay.


        :return: The active of this ItemEbay.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """
        Sets the active of this ItemEbay.


        :param active: The active of this ItemEbay.
        :type: bool
        """

        self._active = active

    @property
    def category_id(self):
        """
        Gets the category_id of this ItemEbay.


        :return: The category_id of this ItemEbay.
        :rtype: int
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """
        Sets the category_id of this ItemEbay.


        :param category_id: The category_id of this ItemEbay.
        :type: int
        """

        self._category_id = category_id

    @property
    def category_specifics(self):
        """
        Gets the category_specifics of this ItemEbay.


        :return: The category_specifics of this ItemEbay.
        :rtype: list[ItemEbayCategorySpecific]
        """
        return self._category_specifics

    @category_specifics.setter
    def category_specifics(self, category_specifics):
        """
        Sets the category_specifics of this ItemEbay.


        :param category_specifics: The category_specifics of this ItemEbay.
        :type: list[ItemEbayCategorySpecific]
        """

        self._category_specifics = category_specifics

    @property
    def condition_description(self):
        """
        Gets the condition_description of this ItemEbay.


        :return: The condition_description of this ItemEbay.
        :rtype: str
        """
        return self._condition_description

    @condition_description.setter
    def condition_description(self, condition_description):
        """
        Sets the condition_description of this ItemEbay.


        :param condition_description: The condition_description of this ItemEbay.
        :type: str
        """

        self._condition_description = condition_description

    @property
    def condition_id(self):
        """
        Gets the condition_id of this ItemEbay.


        :return: The condition_id of this ItemEbay.
        :rtype: int
        """
        return self._condition_id

    @condition_id.setter
    def condition_id(self, condition_id):
        """
        Sets the condition_id of this ItemEbay.


        :param condition_id: The condition_id of this ItemEbay.
        :type: int
        """

        self._condition_id = condition_id

    @property
    def consecutive_failures(self):
        """
        Gets the consecutive_failures of this ItemEbay.


        :return: The consecutive_failures of this ItemEbay.
        :rtype: int
        """
        return self._consecutive_failures

    @consecutive_failures.setter
    def consecutive_failures(self, consecutive_failures):
        """
        Sets the consecutive_failures of this ItemEbay.


        :param consecutive_failures: The consecutive_failures of this ItemEbay.
        :type: int
        """

        self._consecutive_failures = consecutive_failures

    @property
    def custom_category1(self):
        """
        Gets the custom_category1 of this ItemEbay.


        :return: The custom_category1 of this ItemEbay.
        :rtype: int
        """
        return self._custom_category1

    @custom_category1.setter
    def custom_category1(self, custom_category1):
        """
        Sets the custom_category1 of this ItemEbay.


        :param custom_category1: The custom_category1 of this ItemEbay.
        :type: int
        """

        self._custom_category1 = custom_category1

    @property
    def custom_category2(self):
        """
        Gets the custom_category2 of this ItemEbay.


        :return: The custom_category2 of this ItemEbay.
        :rtype: int
        """
        return self._custom_category2

    @custom_category2.setter
    def custom_category2(self, custom_category2):
        """
        Sets the custom_category2 of this ItemEbay.


        :param custom_category2: The custom_category2 of this ItemEbay.
        :type: int
        """

        self._custom_category2 = custom_category2

    @property
    def dispatch_time_max(self):
        """
        Gets the dispatch_time_max of this ItemEbay.


        :return: The dispatch_time_max of this ItemEbay.
        :rtype: int
        """
        return self._dispatch_time_max

    @dispatch_time_max.setter
    def dispatch_time_max(self, dispatch_time_max):
        """
        Sets the dispatch_time_max of this ItemEbay.


        :param dispatch_time_max: The dispatch_time_max of this ItemEbay.
        :type: int
        """

        self._dispatch_time_max = dispatch_time_max

    @property
    def domestic_1_additional_cost(self):
        """
        Gets the domestic_1_additional_cost of this ItemEbay.


        :return: The domestic_1_additional_cost of this ItemEbay.
        :rtype: float
        """
        return self._domestic_1_additional_cost

    @domestic_1_additional_cost.setter
    def domestic_1_additional_cost(self, domestic_1_additional_cost):
        """
        Sets the domestic_1_additional_cost of this ItemEbay.


        :param domestic_1_additional_cost: The domestic_1_additional_cost of this ItemEbay.
        :type: float
        """

        self._domestic_1_additional_cost = domestic_1_additional_cost

    @property
    def domestic_1_first_cost(self):
        """
        Gets the domestic_1_first_cost of this ItemEbay.


        :return: The domestic_1_first_cost of this ItemEbay.
        :rtype: float
        """
        return self._domestic_1_first_cost

    @domestic_1_first_cost.setter
    def domestic_1_first_cost(self, domestic_1_first_cost):
        """
        Sets the domestic_1_first_cost of this ItemEbay.


        :param domestic_1_first_cost: The domestic_1_first_cost of this ItemEbay.
        :type: float
        """

        self._domestic_1_first_cost = domestic_1_first_cost

    @property
    def domestic_2_additional_cost(self):
        """
        Gets the domestic_2_additional_cost of this ItemEbay.


        :return: The domestic_2_additional_cost of this ItemEbay.
        :rtype: float
        """
        return self._domestic_2_additional_cost

    @domestic_2_additional_cost.setter
    def domestic_2_additional_cost(self, domestic_2_additional_cost):
        """
        Sets the domestic_2_additional_cost of this ItemEbay.


        :param domestic_2_additional_cost: The domestic_2_additional_cost of this ItemEbay.
        :type: float
        """

        self._domestic_2_additional_cost = domestic_2_additional_cost

    @property
    def domestic_2_first_cost(self):
        """
        Gets the domestic_2_first_cost of this ItemEbay.


        :return: The domestic_2_first_cost of this ItemEbay.
        :rtype: float
        """
        return self._domestic_2_first_cost

    @domestic_2_first_cost.setter
    def domestic_2_first_cost(self, domestic_2_first_cost):
        """
        Sets the domestic_2_first_cost of this ItemEbay.


        :param domestic_2_first_cost: The domestic_2_first_cost of this ItemEbay.
        :type: float
        """

        self._domestic_2_first_cost = domestic_2_first_cost

    @property
    def domestic_3_additional_cost(self):
        """
        Gets the domestic_3_additional_cost of this ItemEbay.


        :return: The domestic_3_additional_cost of this ItemEbay.
        :rtype: float
        """
        return self._domestic_3_additional_cost

    @domestic_3_additional_cost.setter
    def domestic_3_additional_cost(self, domestic_3_additional_cost):
        """
        Sets the domestic_3_additional_cost of this ItemEbay.


        :param domestic_3_additional_cost: The domestic_3_additional_cost of this ItemEbay.
        :type: float
        """

        self._domestic_3_additional_cost = domestic_3_additional_cost

    @property
    def domestic_3_first_cost(self):
        """
        Gets the domestic_3_first_cost of this ItemEbay.


        :return: The domestic_3_first_cost of this ItemEbay.
        :rtype: float
        """
        return self._domestic_3_first_cost

    @domestic_3_first_cost.setter
    def domestic_3_first_cost(self, domestic_3_first_cost):
        """
        Sets the domestic_3_first_cost of this ItemEbay.


        :param domestic_3_first_cost: The domestic_3_first_cost of this ItemEbay.
        :type: float
        """

        self._domestic_3_first_cost = domestic_3_first_cost

    @property
    def domestic_4_additional_cost(self):
        """
        Gets the domestic_4_additional_cost of this ItemEbay.


        :return: The domestic_4_additional_cost of this ItemEbay.
        :rtype: float
        """
        return self._domestic_4_additional_cost

    @domestic_4_additional_cost.setter
    def domestic_4_additional_cost(self, domestic_4_additional_cost):
        """
        Sets the domestic_4_additional_cost of this ItemEbay.


        :param domestic_4_additional_cost: The domestic_4_additional_cost of this ItemEbay.
        :type: float
        """

        self._domestic_4_additional_cost = domestic_4_additional_cost

    @property
    def domestic_4_first_cost(self):
        """
        Gets the domestic_4_first_cost of this ItemEbay.


        :return: The domestic_4_first_cost of this ItemEbay.
        :rtype: float
        """
        return self._domestic_4_first_cost

    @domestic_4_first_cost.setter
    def domestic_4_first_cost(self, domestic_4_first_cost):
        """
        Sets the domestic_4_first_cost of this ItemEbay.


        :param domestic_4_first_cost: The domestic_4_first_cost of this ItemEbay.
        :type: float
        """

        self._domestic_4_first_cost = domestic_4_first_cost

    @property
    def ebay_auction_id(self):
        """
        Gets the ebay_auction_id of this ItemEbay.


        :return: The ebay_auction_id of this ItemEbay.
        :rtype: str
        """
        return self._ebay_auction_id

    @ebay_auction_id.setter
    def ebay_auction_id(self, ebay_auction_id):
        """
        Sets the ebay_auction_id of this ItemEbay.


        :param ebay_auction_id: The ebay_auction_id of this ItemEbay.
        :type: str
        """

        self._ebay_auction_id = ebay_auction_id

    @property
    def ebay_specific_inventory(self):
        """
        Gets the ebay_specific_inventory of this ItemEbay.


        :return: The ebay_specific_inventory of this ItemEbay.
        :rtype: int
        """
        return self._ebay_specific_inventory

    @ebay_specific_inventory.setter
    def ebay_specific_inventory(self, ebay_specific_inventory):
        """
        Sets the ebay_specific_inventory of this ItemEbay.


        :param ebay_specific_inventory: The ebay_specific_inventory of this ItemEbay.
        :type: int
        """

        self._ebay_specific_inventory = ebay_specific_inventory

    @property
    def ebay_template_name(self):
        """
        Gets the ebay_template_name of this ItemEbay.


        :return: The ebay_template_name of this ItemEbay.
        :rtype: str
        """
        return self._ebay_template_name

    @ebay_template_name.setter
    def ebay_template_name(self, ebay_template_name):
        """
        Sets the ebay_template_name of this ItemEbay.


        :param ebay_template_name: The ebay_template_name of this ItemEbay.
        :type: str
        """

        self._ebay_template_name = ebay_template_name

    @property
    def ebay_template_oid(self):
        """
        Gets the ebay_template_oid of this ItemEbay.


        :return: The ebay_template_oid of this ItemEbay.
        :rtype: int
        """
        return self._ebay_template_oid

    @ebay_template_oid.setter
    def ebay_template_oid(self, ebay_template_oid):
        """
        Sets the ebay_template_oid of this ItemEbay.


        :param ebay_template_oid: The ebay_template_oid of this ItemEbay.
        :type: int
        """

        self._ebay_template_oid = ebay_template_oid

    @property
    def end_time(self):
        """
        Gets the end_time of this ItemEbay.


        :return: The end_time of this ItemEbay.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """
        Sets the end_time of this ItemEbay.


        :param end_time: The end_time of this ItemEbay.
        :type: str
        """

        self._end_time = end_time

    @property
    def free_shipping(self):
        """
        Gets the free_shipping of this ItemEbay.


        :return: The free_shipping of this ItemEbay.
        :rtype: bool
        """
        return self._free_shipping

    @free_shipping.setter
    def free_shipping(self, free_shipping):
        """
        Sets the free_shipping of this ItemEbay.


        :param free_shipping: The free_shipping of this ItemEbay.
        :type: bool
        """

        self._free_shipping = free_shipping

    @property
    def free_shipping_method(self):
        """
        Gets the free_shipping_method of this ItemEbay.


        :return: The free_shipping_method of this ItemEbay.
        :rtype: str
        """
        return self._free_shipping_method

    @free_shipping_method.setter
    def free_shipping_method(self, free_shipping_method):
        """
        Sets the free_shipping_method of this ItemEbay.


        :param free_shipping_method: The free_shipping_method of this ItemEbay.
        :type: str
        """

        self._free_shipping_method = free_shipping_method

    @property
    def international_1_additional_cost(self):
        """
        Gets the international_1_additional_cost of this ItemEbay.


        :return: The international_1_additional_cost of this ItemEbay.
        :rtype: float
        """
        return self._international_1_additional_cost

    @international_1_additional_cost.setter
    def international_1_additional_cost(self, international_1_additional_cost):
        """
        Sets the international_1_additional_cost of this ItemEbay.


        :param international_1_additional_cost: The international_1_additional_cost of this ItemEbay.
        :type: float
        """

        self._international_1_additional_cost = international_1_additional_cost

    @property
    def international_1_first_cost(self):
        """
        Gets the international_1_first_cost of this ItemEbay.


        :return: The international_1_first_cost of this ItemEbay.
        :rtype: float
        """
        return self._international_1_first_cost

    @international_1_first_cost.setter
    def international_1_first_cost(self, international_1_first_cost):
        """
        Sets the international_1_first_cost of this ItemEbay.


        :param international_1_first_cost: The international_1_first_cost of this ItemEbay.
        :type: float
        """

        self._international_1_first_cost = international_1_first_cost

    @property
    def international_2_additional_cost(self):
        """
        Gets the international_2_additional_cost of this ItemEbay.


        :return: The international_2_additional_cost of this ItemEbay.
        :rtype: float
        """
        return self._international_2_additional_cost

    @international_2_additional_cost.setter
    def international_2_additional_cost(self, international_2_additional_cost):
        """
        Sets the international_2_additional_cost of this ItemEbay.


        :param international_2_additional_cost: The international_2_additional_cost of this ItemEbay.
        :type: float
        """

        self._international_2_additional_cost = international_2_additional_cost

    @property
    def international_2_first_cost(self):
        """
        Gets the international_2_first_cost of this ItemEbay.


        :return: The international_2_first_cost of this ItemEbay.
        :rtype: float
        """
        return self._international_2_first_cost

    @international_2_first_cost.setter
    def international_2_first_cost(self, international_2_first_cost):
        """
        Sets the international_2_first_cost of this ItemEbay.


        :param international_2_first_cost: The international_2_first_cost of this ItemEbay.
        :type: float
        """

        self._international_2_first_cost = international_2_first_cost

    @property
    def international_3_additional_cost(self):
        """
        Gets the international_3_additional_cost of this ItemEbay.


        :return: The international_3_additional_cost of this ItemEbay.
        :rtype: float
        """
        return self._international_3_additional_cost

    @international_3_additional_cost.setter
    def international_3_additional_cost(self, international_3_additional_cost):
        """
        Sets the international_3_additional_cost of this ItemEbay.


        :param international_3_additional_cost: The international_3_additional_cost of this ItemEbay.
        :type: float
        """

        self._international_3_additional_cost = international_3_additional_cost

    @property
    def international_3_first_cost(self):
        """
        Gets the international_3_first_cost of this ItemEbay.


        :return: The international_3_first_cost of this ItemEbay.
        :rtype: float
        """
        return self._international_3_first_cost

    @international_3_first_cost.setter
    def international_3_first_cost(self, international_3_first_cost):
        """
        Sets the international_3_first_cost of this ItemEbay.


        :param international_3_first_cost: The international_3_first_cost of this ItemEbay.
        :type: float
        """

        self._international_3_first_cost = international_3_first_cost

    @property
    def international_4_additional_cost(self):
        """
        Gets the international_4_additional_cost of this ItemEbay.


        :return: The international_4_additional_cost of this ItemEbay.
        :rtype: float
        """
        return self._international_4_additional_cost

    @international_4_additional_cost.setter
    def international_4_additional_cost(self, international_4_additional_cost):
        """
        Sets the international_4_additional_cost of this ItemEbay.


        :param international_4_additional_cost: The international_4_additional_cost of this ItemEbay.
        :type: float
        """

        self._international_4_additional_cost = international_4_additional_cost

    @property
    def international_4_first_cost(self):
        """
        Gets the international_4_first_cost of this ItemEbay.


        :return: The international_4_first_cost of this ItemEbay.
        :rtype: float
        """
        return self._international_4_first_cost

    @international_4_first_cost.setter
    def international_4_first_cost(self, international_4_first_cost):
        """
        Sets the international_4_first_cost of this ItemEbay.


        :param international_4_first_cost: The international_4_first_cost of this ItemEbay.
        :type: float
        """

        self._international_4_first_cost = international_4_first_cost

    @property
    def last_status_dts(self):
        """
        Gets the last_status_dts of this ItemEbay.


        :return: The last_status_dts of this ItemEbay.
        :rtype: str
        """
        return self._last_status_dts

    @last_status_dts.setter
    def last_status_dts(self, last_status_dts):
        """
        Sets the last_status_dts of this ItemEbay.


        :param last_status_dts: The last_status_dts of this ItemEbay.
        :type: str
        """

        self._last_status_dts = last_status_dts

    @property
    def listed_dispatch_time_max(self):
        """
        Gets the listed_dispatch_time_max of this ItemEbay.


        :return: The listed_dispatch_time_max of this ItemEbay.
        :rtype: int
        """
        return self._listed_dispatch_time_max

    @listed_dispatch_time_max.setter
    def listed_dispatch_time_max(self, listed_dispatch_time_max):
        """
        Sets the listed_dispatch_time_max of this ItemEbay.


        :param listed_dispatch_time_max: The listed_dispatch_time_max of this ItemEbay.
        :type: int
        """

        self._listed_dispatch_time_max = listed_dispatch_time_max

    @property
    def listed_ebay_template_oid(self):
        """
        Gets the listed_ebay_template_oid of this ItemEbay.


        :return: The listed_ebay_template_oid of this ItemEbay.
        :rtype: int
        """
        return self._listed_ebay_template_oid

    @listed_ebay_template_oid.setter
    def listed_ebay_template_oid(self, listed_ebay_template_oid):
        """
        Sets the listed_ebay_template_oid of this ItemEbay.


        :param listed_ebay_template_oid: The listed_ebay_template_oid of this ItemEbay.
        :type: int
        """

        self._listed_ebay_template_oid = listed_ebay_template_oid

    @property
    def listing_dts(self):
        """
        Gets the listing_dts of this ItemEbay.


        :return: The listing_dts of this ItemEbay.
        :rtype: str
        """
        return self._listing_dts

    @listing_dts.setter
    def listing_dts(self, listing_dts):
        """
        Sets the listing_dts of this ItemEbay.


        :param listing_dts: The listing_dts of this ItemEbay.
        :type: str
        """

        self._listing_dts = listing_dts

    @property
    def listing_duration(self):
        """
        Gets the listing_duration of this ItemEbay.


        :return: The listing_duration of this ItemEbay.
        :rtype: str
        """
        return self._listing_duration

    @listing_duration.setter
    def listing_duration(self, listing_duration):
        """
        Sets the listing_duration of this ItemEbay.


        :param listing_duration: The listing_duration of this ItemEbay.
        :type: str
        """

        self._listing_duration = listing_duration

    @property
    def listing_price(self):
        """
        Gets the listing_price of this ItemEbay.


        :return: The listing_price of this ItemEbay.
        :rtype: float
        """
        return self._listing_price

    @listing_price.setter
    def listing_price(self, listing_price):
        """
        Sets the listing_price of this ItemEbay.


        :param listing_price: The listing_price of this ItemEbay.
        :type: float
        """

        self._listing_price = listing_price

    @property
    def listing_price_override(self):
        """
        Gets the listing_price_override of this ItemEbay.


        :return: The listing_price_override of this ItemEbay.
        :rtype: float
        """
        return self._listing_price_override

    @listing_price_override.setter
    def listing_price_override(self, listing_price_override):
        """
        Sets the listing_price_override of this ItemEbay.


        :param listing_price_override: The listing_price_override of this ItemEbay.
        :type: float
        """

        self._listing_price_override = listing_price_override

    @property
    def listing_type(self):
        """
        Gets the listing_type of this ItemEbay.


        :return: The listing_type of this ItemEbay.
        :rtype: str
        """
        return self._listing_type

    @listing_type.setter
    def listing_type(self, listing_type):
        """
        Sets the listing_type of this ItemEbay.


        :param listing_type: The listing_type of this ItemEbay.
        :type: str
        """

        self._listing_type = listing_type

    @property
    def marketplace_analysis(self):
        """
        Gets the marketplace_analysis of this ItemEbay.


        :return: The marketplace_analysis of this ItemEbay.
        :rtype: ItemEbayMarketPlaceAnalysis
        """
        return self._marketplace_analysis

    @marketplace_analysis.setter
    def marketplace_analysis(self, marketplace_analysis):
        """
        Sets the marketplace_analysis of this ItemEbay.


        :param marketplace_analysis: The marketplace_analysis of this ItemEbay.
        :type: ItemEbayMarketPlaceAnalysis
        """

        self._marketplace_analysis = marketplace_analysis

    @property
    def marketplace_analysis_perform(self):
        """
        Gets the marketplace_analysis_perform of this ItemEbay.


        :return: The marketplace_analysis_perform of this ItemEbay.
        :rtype: bool
        """
        return self._marketplace_analysis_perform

    @marketplace_analysis_perform.setter
    def marketplace_analysis_perform(self, marketplace_analysis_perform):
        """
        Sets the marketplace_analysis_perform of this ItemEbay.


        :param marketplace_analysis_perform: The marketplace_analysis_perform of this ItemEbay.
        :type: bool
        """

        self._marketplace_analysis_perform = marketplace_analysis_perform

    @property
    def marketplace_final_value_fee_percentage(self):
        """
        Gets the marketplace_final_value_fee_percentage of this ItemEbay.


        :return: The marketplace_final_value_fee_percentage of this ItemEbay.
        :rtype: float
        """
        return self._marketplace_final_value_fee_percentage

    @marketplace_final_value_fee_percentage.setter
    def marketplace_final_value_fee_percentage(self, marketplace_final_value_fee_percentage):
        """
        Sets the marketplace_final_value_fee_percentage of this ItemEbay.


        :param marketplace_final_value_fee_percentage: The marketplace_final_value_fee_percentage of this ItemEbay.
        :type: float
        """

        self._marketplace_final_value_fee_percentage = marketplace_final_value_fee_percentage

    @property
    def marketplace_last_check_dts(self):
        """
        Gets the marketplace_last_check_dts of this ItemEbay.


        :return: The marketplace_last_check_dts of this ItemEbay.
        :rtype: str
        """
        return self._marketplace_last_check_dts

    @marketplace_last_check_dts.setter
    def marketplace_last_check_dts(self, marketplace_last_check_dts):
        """
        Sets the marketplace_last_check_dts of this ItemEbay.


        :param marketplace_last_check_dts: The marketplace_last_check_dts of this ItemEbay.
        :type: str
        """

        self._marketplace_last_check_dts = marketplace_last_check_dts

    @property
    def marketplace_lowest(self):
        """
        Gets the marketplace_lowest of this ItemEbay.


        :return: The marketplace_lowest of this ItemEbay.
        :rtype: bool
        """
        return self._marketplace_lowest

    @marketplace_lowest.setter
    def marketplace_lowest(self, marketplace_lowest):
        """
        Sets the marketplace_lowest of this ItemEbay.


        :param marketplace_lowest: The marketplace_lowest of this ItemEbay.
        :type: bool
        """

        self._marketplace_lowest = marketplace_lowest

    @property
    def marketplace_map_violation(self):
        """
        Gets the marketplace_map_violation of this ItemEbay.


        :return: The marketplace_map_violation of this ItemEbay.
        :rtype: bool
        """
        return self._marketplace_map_violation

    @marketplace_map_violation.setter
    def marketplace_map_violation(self, marketplace_map_violation):
        """
        Sets the marketplace_map_violation of this ItemEbay.


        :param marketplace_map_violation: The marketplace_map_violation of this ItemEbay.
        :type: bool
        """

        self._marketplace_map_violation = marketplace_map_violation

    @property
    def marketplace_multiplier(self):
        """
        Gets the marketplace_multiplier of this ItemEbay.


        :return: The marketplace_multiplier of this ItemEbay.
        :rtype: float
        """
        return self._marketplace_multiplier

    @marketplace_multiplier.setter
    def marketplace_multiplier(self, marketplace_multiplier):
        """
        Sets the marketplace_multiplier of this ItemEbay.


        :param marketplace_multiplier: The marketplace_multiplier of this ItemEbay.
        :type: float
        """

        self._marketplace_multiplier = marketplace_multiplier

    @property
    def marketplace_other_price(self):
        """
        Gets the marketplace_other_price of this ItemEbay.


        :return: The marketplace_other_price of this ItemEbay.
        :rtype: float
        """
        return self._marketplace_other_price

    @marketplace_other_price.setter
    def marketplace_other_price(self, marketplace_other_price):
        """
        Sets the marketplace_other_price of this ItemEbay.


        :param marketplace_other_price: The marketplace_other_price of this ItemEbay.
        :type: float
        """

        self._marketplace_other_price = marketplace_other_price

    @property
    def marketplace_other_seller(self):
        """
        Gets the marketplace_other_seller of this ItemEbay.


        :return: The marketplace_other_seller of this ItemEbay.
        :rtype: str
        """
        return self._marketplace_other_seller

    @marketplace_other_seller.setter
    def marketplace_other_seller(self, marketplace_other_seller):
        """
        Sets the marketplace_other_seller of this ItemEbay.


        :param marketplace_other_seller: The marketplace_other_seller of this ItemEbay.
        :type: str
        """

        self._marketplace_other_seller = marketplace_other_seller

    @property
    def marketplace_other_shipping(self):
        """
        Gets the marketplace_other_shipping of this ItemEbay.


        :return: The marketplace_other_shipping of this ItemEbay.
        :rtype: float
        """
        return self._marketplace_other_shipping

    @marketplace_other_shipping.setter
    def marketplace_other_shipping(self, marketplace_other_shipping):
        """
        Sets the marketplace_other_shipping of this ItemEbay.


        :param marketplace_other_shipping: The marketplace_other_shipping of this ItemEbay.
        :type: float
        """

        self._marketplace_other_shipping = marketplace_other_shipping

    @property
    def marketplace_other_total(self):
        """
        Gets the marketplace_other_total of this ItemEbay.


        :return: The marketplace_other_total of this ItemEbay.
        :rtype: float
        """
        return self._marketplace_other_total

    @marketplace_other_total.setter
    def marketplace_other_total(self, marketplace_other_total):
        """
        Sets the marketplace_other_total of this ItemEbay.


        :param marketplace_other_total: The marketplace_other_total of this ItemEbay.
        :type: float
        """

        self._marketplace_other_total = marketplace_other_total

    @property
    def marketplace_our_additional_profit_potential(self):
        """
        Gets the marketplace_our_additional_profit_potential of this ItemEbay.


        :return: The marketplace_our_additional_profit_potential of this ItemEbay.
        :rtype: float
        """
        return self._marketplace_our_additional_profit_potential

    @marketplace_our_additional_profit_potential.setter
    def marketplace_our_additional_profit_potential(self, marketplace_our_additional_profit_potential):
        """
        Sets the marketplace_our_additional_profit_potential of this ItemEbay.


        :param marketplace_our_additional_profit_potential: The marketplace_our_additional_profit_potential of this ItemEbay.
        :type: float
        """

        self._marketplace_our_additional_profit_potential = marketplace_our_additional_profit_potential

    @property
    def marketplace_our_price(self):
        """
        Gets the marketplace_our_price of this ItemEbay.


        :return: The marketplace_our_price of this ItemEbay.
        :rtype: float
        """
        return self._marketplace_our_price

    @marketplace_our_price.setter
    def marketplace_our_price(self, marketplace_our_price):
        """
        Sets the marketplace_our_price of this ItemEbay.


        :param marketplace_our_price: The marketplace_our_price of this ItemEbay.
        :type: float
        """

        self._marketplace_our_price = marketplace_our_price

    @property
    def marketplace_our_profit(self):
        """
        Gets the marketplace_our_profit of this ItemEbay.


        :return: The marketplace_our_profit of this ItemEbay.
        :rtype: float
        """
        return self._marketplace_our_profit

    @marketplace_our_profit.setter
    def marketplace_our_profit(self, marketplace_our_profit):
        """
        Sets the marketplace_our_profit of this ItemEbay.


        :param marketplace_our_profit: The marketplace_our_profit of this ItemEbay.
        :type: float
        """

        self._marketplace_our_profit = marketplace_our_profit

    @property
    def marketplace_our_shipping(self):
        """
        Gets the marketplace_our_shipping of this ItemEbay.


        :return: The marketplace_our_shipping of this ItemEbay.
        :rtype: float
        """
        return self._marketplace_our_shipping

    @marketplace_our_shipping.setter
    def marketplace_our_shipping(self, marketplace_our_shipping):
        """
        Sets the marketplace_our_shipping of this ItemEbay.


        :param marketplace_our_shipping: The marketplace_our_shipping of this ItemEbay.
        :type: float
        """

        self._marketplace_our_shipping = marketplace_our_shipping

    @property
    def marketplace_our_total(self):
        """
        Gets the marketplace_our_total of this ItemEbay.


        :return: The marketplace_our_total of this ItemEbay.
        :rtype: float
        """
        return self._marketplace_our_total

    @marketplace_our_total.setter
    def marketplace_our_total(self, marketplace_our_total):
        """
        Sets the marketplace_our_total of this ItemEbay.


        :param marketplace_our_total: The marketplace_our_total of this ItemEbay.
        :type: float
        """

        self._marketplace_our_total = marketplace_our_total

    @property
    def marketplace_overhead(self):
        """
        Gets the marketplace_overhead of this ItemEbay.


        :return: The marketplace_overhead of this ItemEbay.
        :rtype: float
        """
        return self._marketplace_overhead

    @marketplace_overhead.setter
    def marketplace_overhead(self, marketplace_overhead):
        """
        Sets the marketplace_overhead of this ItemEbay.


        :param marketplace_overhead: The marketplace_overhead of this ItemEbay.
        :type: float
        """

        self._marketplace_overhead = marketplace_overhead

    @property
    def marketplace_profitable(self):
        """
        Gets the marketplace_profitable of this ItemEbay.


        :return: The marketplace_profitable of this ItemEbay.
        :rtype: bool
        """
        return self._marketplace_profitable

    @marketplace_profitable.setter
    def marketplace_profitable(self, marketplace_profitable):
        """
        Sets the marketplace_profitable of this ItemEbay.


        :param marketplace_profitable: The marketplace_profitable of this ItemEbay.
        :type: bool
        """

        self._marketplace_profitable = marketplace_profitable

    @property
    def next_attemp_dts(self):
        """
        Gets the next_attemp_dts of this ItemEbay.


        :return: The next_attemp_dts of this ItemEbay.
        :rtype: str
        """
        return self._next_attemp_dts

    @next_attemp_dts.setter
    def next_attemp_dts(self, next_attemp_dts):
        """
        Sets the next_attemp_dts of this ItemEbay.


        :param next_attemp_dts: The next_attemp_dts of this ItemEbay.
        :type: str
        """

        self._next_attemp_dts = next_attemp_dts

    @property
    def next_listing_duration(self):
        """
        Gets the next_listing_duration of this ItemEbay.


        :return: The next_listing_duration of this ItemEbay.
        :rtype: str
        """
        return self._next_listing_duration

    @next_listing_duration.setter
    def next_listing_duration(self, next_listing_duration):
        """
        Sets the next_listing_duration of this ItemEbay.


        :param next_listing_duration: The next_listing_duration of this ItemEbay.
        :type: str
        """

        self._next_listing_duration = next_listing_duration

    @property
    def no_promotional_shipping(self):
        """
        Gets the no_promotional_shipping of this ItemEbay.


        :return: The no_promotional_shipping of this ItemEbay.
        :rtype: bool
        """
        return self._no_promotional_shipping

    @no_promotional_shipping.setter
    def no_promotional_shipping(self, no_promotional_shipping):
        """
        Sets the no_promotional_shipping of this ItemEbay.


        :param no_promotional_shipping: The no_promotional_shipping of this ItemEbay.
        :type: bool
        """

        self._no_promotional_shipping = no_promotional_shipping

    @property
    def packaging_handling_costs(self):
        """
        Gets the packaging_handling_costs of this ItemEbay.


        :return: The packaging_handling_costs of this ItemEbay.
        :rtype: float
        """
        return self._packaging_handling_costs

    @packaging_handling_costs.setter
    def packaging_handling_costs(self, packaging_handling_costs):
        """
        Sets the packaging_handling_costs of this ItemEbay.


        :param packaging_handling_costs: The packaging_handling_costs of this ItemEbay.
        :type: float
        """

        self._packaging_handling_costs = packaging_handling_costs

    @property
    def previous_ebay_auction_id(self):
        """
        Gets the previous_ebay_auction_id of this ItemEbay.


        :return: The previous_ebay_auction_id of this ItemEbay.
        :rtype: str
        """
        return self._previous_ebay_auction_id

    @previous_ebay_auction_id.setter
    def previous_ebay_auction_id(self, previous_ebay_auction_id):
        """
        Sets the previous_ebay_auction_id of this ItemEbay.


        :param previous_ebay_auction_id: The previous_ebay_auction_id of this ItemEbay.
        :type: str
        """

        self._previous_ebay_auction_id = previous_ebay_auction_id

    @property
    def quantity(self):
        """
        Gets the quantity of this ItemEbay.


        :return: The quantity of this ItemEbay.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """
        Sets the quantity of this ItemEbay.


        :param quantity: The quantity of this ItemEbay.
        :type: int
        """

        self._quantity = quantity

    @property
    def reserve_price(self):
        """
        Gets the reserve_price of this ItemEbay.


        :return: The reserve_price of this ItemEbay.
        :rtype: float
        """
        return self._reserve_price

    @reserve_price.setter
    def reserve_price(self, reserve_price):
        """
        Sets the reserve_price of this ItemEbay.


        :param reserve_price: The reserve_price of this ItemEbay.
        :type: float
        """

        self._reserve_price = reserve_price

    @property
    def send_dimensions_and_weight(self):
        """
        Gets the send_dimensions_and_weight of this ItemEbay.


        :return: The send_dimensions_and_weight of this ItemEbay.
        :rtype: str
        """
        return self._send_dimensions_and_weight

    @send_dimensions_and_weight.setter
    def send_dimensions_and_weight(self, send_dimensions_and_weight):
        """
        Sets the send_dimensions_and_weight of this ItemEbay.


        :param send_dimensions_and_weight: The send_dimensions_and_weight of this ItemEbay.
        :type: str
        """

        self._send_dimensions_and_weight = send_dimensions_and_weight

    @property
    def start_time(self):
        """
        Gets the start_time of this ItemEbay.


        :return: The start_time of this ItemEbay.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """
        Sets the start_time of this ItemEbay.


        :param start_time: The start_time of this ItemEbay.
        :type: str
        """

        self._start_time = start_time

    @property
    def status(self):
        """
        Gets the status of this ItemEbay.


        :return: The status of this ItemEbay.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this ItemEbay.


        :param status: The status of this ItemEbay.
        :type: str
        """

        self._status = status

    @property
    def target_dispatch_time_max(self):
        """
        Gets the target_dispatch_time_max of this ItemEbay.


        :return: The target_dispatch_time_max of this ItemEbay.
        :rtype: int
        """
        return self._target_dispatch_time_max

    @target_dispatch_time_max.setter
    def target_dispatch_time_max(self, target_dispatch_time_max):
        """
        Sets the target_dispatch_time_max of this ItemEbay.


        :param target_dispatch_time_max: The target_dispatch_time_max of this ItemEbay.
        :type: int
        """

        self._target_dispatch_time_max = target_dispatch_time_max

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
