# coding: utf-8

"""
    UltraCart Rest API V2

    This is the next generation UltraCart REST API...

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class ItemContentAttribute(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, item_meta_description=None, item_meta_keywords=None, item_meta_title=None, name=None, translated_text_instance_oid=None, type=None, value=None):
        """
        ItemContentAttribute - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'item_meta_description': 'str',
            'item_meta_keywords': 'str',
            'item_meta_title': 'str',
            'name': 'str',
            'translated_text_instance_oid': 'int',
            'type': 'str',
            'value': 'str'
        }

        self.attribute_map = {
            'item_meta_description': 'ITEM_META_DESCRIPTION',
            'item_meta_keywords': 'ITEM_META_KEYWORDS',
            'item_meta_title': 'ITEM_META_TITLE',
            'name': 'name',
            'translated_text_instance_oid': 'translated_text_instance_oid',
            'type': 'type',
            'value': 'value'
        }

        self._item_meta_description = item_meta_description
        self._item_meta_keywords = item_meta_keywords
        self._item_meta_title = item_meta_title
        self._name = name
        self._translated_text_instance_oid = translated_text_instance_oid
        self._type = type
        self._value = value

    @property
    def item_meta_description(self):
        """
        Gets the item_meta_description of this ItemContentAttribute.


        :return: The item_meta_description of this ItemContentAttribute.
        :rtype: str
        """
        return self._item_meta_description

    @item_meta_description.setter
    def item_meta_description(self, item_meta_description):
        """
        Sets the item_meta_description of this ItemContentAttribute.


        :param item_meta_description: The item_meta_description of this ItemContentAttribute.
        :type: str
        """

        self._item_meta_description = item_meta_description

    @property
    def item_meta_keywords(self):
        """
        Gets the item_meta_keywords of this ItemContentAttribute.


        :return: The item_meta_keywords of this ItemContentAttribute.
        :rtype: str
        """
        return self._item_meta_keywords

    @item_meta_keywords.setter
    def item_meta_keywords(self, item_meta_keywords):
        """
        Sets the item_meta_keywords of this ItemContentAttribute.


        :param item_meta_keywords: The item_meta_keywords of this ItemContentAttribute.
        :type: str
        """

        self._item_meta_keywords = item_meta_keywords

    @property
    def item_meta_title(self):
        """
        Gets the item_meta_title of this ItemContentAttribute.


        :return: The item_meta_title of this ItemContentAttribute.
        :rtype: str
        """
        return self._item_meta_title

    @item_meta_title.setter
    def item_meta_title(self, item_meta_title):
        """
        Sets the item_meta_title of this ItemContentAttribute.


        :param item_meta_title: The item_meta_title of this ItemContentAttribute.
        :type: str
        """

        self._item_meta_title = item_meta_title

    @property
    def name(self):
        """
        Gets the name of this ItemContentAttribute.


        :return: The name of this ItemContentAttribute.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this ItemContentAttribute.


        :param name: The name of this ItemContentAttribute.
        :type: str
        """

        self._name = name

    @property
    def translated_text_instance_oid(self):
        """
        Gets the translated_text_instance_oid of this ItemContentAttribute.


        :return: The translated_text_instance_oid of this ItemContentAttribute.
        :rtype: int
        """
        return self._translated_text_instance_oid

    @translated_text_instance_oid.setter
    def translated_text_instance_oid(self, translated_text_instance_oid):
        """
        Sets the translated_text_instance_oid of this ItemContentAttribute.


        :param translated_text_instance_oid: The translated_text_instance_oid of this ItemContentAttribute.
        :type: int
        """

        self._translated_text_instance_oid = translated_text_instance_oid

    @property
    def type(self):
        """
        Gets the type of this ItemContentAttribute.


        :return: The type of this ItemContentAttribute.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """
        Sets the type of this ItemContentAttribute.


        :param type: The type of this ItemContentAttribute.
        :type: str
        """

        self._type = type

    @property
    def value(self):
        """
        Gets the value of this ItemContentAttribute.


        :return: The value of this ItemContentAttribute.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """
        Sets the value of this ItemContentAttribute.


        :param value: The value of this ItemContentAttribute.
        :type: str
        """

        self._value = value

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
