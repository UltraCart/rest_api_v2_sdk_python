# coding: utf-8

"""
    UltraCart Rest API V2

    UltraCart REST API Version 2  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class PaymentsConfigurationWePay(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'accept_wepay': 'bool',
        'hide_credit_cards_non_ultra_cart_payments': 'bool',
        'hide_surcharge_content': 'bool',
        'remove_pay_pal_pro': 'bool',
        'restrictions': 'PaymentsConfigurationRestrictions',
        'short_pay_pal_marketing_text': 'bool',
        'show_ultra_cart_payments_disabled': 'bool',
        'show_ultra_cart_payments_intro': 'bool',
        'show_ultra_cart_payments_verification': 'bool',
        'show_ultra_cart_payments_verified': 'bool',
        'wepay_account_update_uri': 'str',
        'wepay_address1': 'str',
        'wepay_address2': 'str',
        'wepay_canada_accept_debit_cards': 'bool',
        'wepay_city': 'str',
        'wepay_company': 'str',
        'wepay_company_description': 'str',
        'wepay_console_hostname': 'str',
        'wepay_country': 'str',
        'wepay_currency': 'str',
        'wepay_expected_revenue': 'str',
        'wepay_industry': 'str',
        'wepay_owner_email': 'str',
        'wepay_owner_name': 'str',
        'wepay_owner_phone': 'str',
        'wepay_state': 'str',
        'wepay_website_url': 'str',
        'wepay_zip': 'str'
    }

    attribute_map = {
        'accept_wepay': 'acceptWepay',
        'hide_credit_cards_non_ultra_cart_payments': 'hideCreditCardsNonUltraCartPayments',
        'hide_surcharge_content': 'hideSurchargeContent',
        'remove_pay_pal_pro': 'removePayPalPro',
        'restrictions': 'restrictions',
        'short_pay_pal_marketing_text': 'shortPayPalMarketingText',
        'show_ultra_cart_payments_disabled': 'showUltraCartPaymentsDisabled',
        'show_ultra_cart_payments_intro': 'showUltraCartPaymentsIntro',
        'show_ultra_cart_payments_verification': 'showUltraCartPaymentsVerification',
        'show_ultra_cart_payments_verified': 'showUltraCartPaymentsVerified',
        'wepay_account_update_uri': 'wepayAccountUpdateUri',
        'wepay_address1': 'wepayAddress1',
        'wepay_address2': 'wepayAddress2',
        'wepay_canada_accept_debit_cards': 'wepayCanadaAcceptDebitCards',
        'wepay_city': 'wepayCity',
        'wepay_company': 'wepayCompany',
        'wepay_company_description': 'wepayCompanyDescription',
        'wepay_console_hostname': 'wepayConsoleHostname',
        'wepay_country': 'wepayCountry',
        'wepay_currency': 'wepayCurrency',
        'wepay_expected_revenue': 'wepayExpectedRevenue',
        'wepay_industry': 'wepayIndustry',
        'wepay_owner_email': 'wepayOwnerEmail',
        'wepay_owner_name': 'wepayOwnerName',
        'wepay_owner_phone': 'wepayOwnerPhone',
        'wepay_state': 'wepayState',
        'wepay_website_url': 'wepayWebsiteUrl',
        'wepay_zip': 'wepayZip'
    }

    def __init__(self, accept_wepay=None, hide_credit_cards_non_ultra_cart_payments=None, hide_surcharge_content=None, remove_pay_pal_pro=None, restrictions=None, short_pay_pal_marketing_text=None, show_ultra_cart_payments_disabled=None, show_ultra_cart_payments_intro=None, show_ultra_cart_payments_verification=None, show_ultra_cart_payments_verified=None, wepay_account_update_uri=None, wepay_address1=None, wepay_address2=None, wepay_canada_accept_debit_cards=None, wepay_city=None, wepay_company=None, wepay_company_description=None, wepay_console_hostname=None, wepay_country=None, wepay_currency=None, wepay_expected_revenue=None, wepay_industry=None, wepay_owner_email=None, wepay_owner_name=None, wepay_owner_phone=None, wepay_state=None, wepay_website_url=None, wepay_zip=None):  # noqa: E501
        """PaymentsConfigurationWePay - a model defined in Swagger"""  # noqa: E501

        self._accept_wepay = None
        self._hide_credit_cards_non_ultra_cart_payments = None
        self._hide_surcharge_content = None
        self._remove_pay_pal_pro = None
        self._restrictions = None
        self._short_pay_pal_marketing_text = None
        self._show_ultra_cart_payments_disabled = None
        self._show_ultra_cart_payments_intro = None
        self._show_ultra_cart_payments_verification = None
        self._show_ultra_cart_payments_verified = None
        self._wepay_account_update_uri = None
        self._wepay_address1 = None
        self._wepay_address2 = None
        self._wepay_canada_accept_debit_cards = None
        self._wepay_city = None
        self._wepay_company = None
        self._wepay_company_description = None
        self._wepay_console_hostname = None
        self._wepay_country = None
        self._wepay_currency = None
        self._wepay_expected_revenue = None
        self._wepay_industry = None
        self._wepay_owner_email = None
        self._wepay_owner_name = None
        self._wepay_owner_phone = None
        self._wepay_state = None
        self._wepay_website_url = None
        self._wepay_zip = None
        self.discriminator = None

        if accept_wepay is not None:
            self.accept_wepay = accept_wepay
        if hide_credit_cards_non_ultra_cart_payments is not None:
            self.hide_credit_cards_non_ultra_cart_payments = hide_credit_cards_non_ultra_cart_payments
        if hide_surcharge_content is not None:
            self.hide_surcharge_content = hide_surcharge_content
        if remove_pay_pal_pro is not None:
            self.remove_pay_pal_pro = remove_pay_pal_pro
        if restrictions is not None:
            self.restrictions = restrictions
        if short_pay_pal_marketing_text is not None:
            self.short_pay_pal_marketing_text = short_pay_pal_marketing_text
        if show_ultra_cart_payments_disabled is not None:
            self.show_ultra_cart_payments_disabled = show_ultra_cart_payments_disabled
        if show_ultra_cart_payments_intro is not None:
            self.show_ultra_cart_payments_intro = show_ultra_cart_payments_intro
        if show_ultra_cart_payments_verification is not None:
            self.show_ultra_cart_payments_verification = show_ultra_cart_payments_verification
        if show_ultra_cart_payments_verified is not None:
            self.show_ultra_cart_payments_verified = show_ultra_cart_payments_verified
        if wepay_account_update_uri is not None:
            self.wepay_account_update_uri = wepay_account_update_uri
        if wepay_address1 is not None:
            self.wepay_address1 = wepay_address1
        if wepay_address2 is not None:
            self.wepay_address2 = wepay_address2
        if wepay_canada_accept_debit_cards is not None:
            self.wepay_canada_accept_debit_cards = wepay_canada_accept_debit_cards
        if wepay_city is not None:
            self.wepay_city = wepay_city
        if wepay_company is not None:
            self.wepay_company = wepay_company
        if wepay_company_description is not None:
            self.wepay_company_description = wepay_company_description
        if wepay_console_hostname is not None:
            self.wepay_console_hostname = wepay_console_hostname
        if wepay_country is not None:
            self.wepay_country = wepay_country
        if wepay_currency is not None:
            self.wepay_currency = wepay_currency
        if wepay_expected_revenue is not None:
            self.wepay_expected_revenue = wepay_expected_revenue
        if wepay_industry is not None:
            self.wepay_industry = wepay_industry
        if wepay_owner_email is not None:
            self.wepay_owner_email = wepay_owner_email
        if wepay_owner_name is not None:
            self.wepay_owner_name = wepay_owner_name
        if wepay_owner_phone is not None:
            self.wepay_owner_phone = wepay_owner_phone
        if wepay_state is not None:
            self.wepay_state = wepay_state
        if wepay_website_url is not None:
            self.wepay_website_url = wepay_website_url
        if wepay_zip is not None:
            self.wepay_zip = wepay_zip

    @property
    def accept_wepay(self):
        """Gets the accept_wepay of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The accept_wepay of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: bool
        """
        return self._accept_wepay

    @accept_wepay.setter
    def accept_wepay(self, accept_wepay):
        """Sets the accept_wepay of this PaymentsConfigurationWePay.


        :param accept_wepay: The accept_wepay of this PaymentsConfigurationWePay.  # noqa: E501
        :type: bool
        """

        self._accept_wepay = accept_wepay

    @property
    def hide_credit_cards_non_ultra_cart_payments(self):
        """Gets the hide_credit_cards_non_ultra_cart_payments of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The hide_credit_cards_non_ultra_cart_payments of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: bool
        """
        return self._hide_credit_cards_non_ultra_cart_payments

    @hide_credit_cards_non_ultra_cart_payments.setter
    def hide_credit_cards_non_ultra_cart_payments(self, hide_credit_cards_non_ultra_cart_payments):
        """Sets the hide_credit_cards_non_ultra_cart_payments of this PaymentsConfigurationWePay.


        :param hide_credit_cards_non_ultra_cart_payments: The hide_credit_cards_non_ultra_cart_payments of this PaymentsConfigurationWePay.  # noqa: E501
        :type: bool
        """

        self._hide_credit_cards_non_ultra_cart_payments = hide_credit_cards_non_ultra_cart_payments

    @property
    def hide_surcharge_content(self):
        """Gets the hide_surcharge_content of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The hide_surcharge_content of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: bool
        """
        return self._hide_surcharge_content

    @hide_surcharge_content.setter
    def hide_surcharge_content(self, hide_surcharge_content):
        """Sets the hide_surcharge_content of this PaymentsConfigurationWePay.


        :param hide_surcharge_content: The hide_surcharge_content of this PaymentsConfigurationWePay.  # noqa: E501
        :type: bool
        """

        self._hide_surcharge_content = hide_surcharge_content

    @property
    def remove_pay_pal_pro(self):
        """Gets the remove_pay_pal_pro of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The remove_pay_pal_pro of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: bool
        """
        return self._remove_pay_pal_pro

    @remove_pay_pal_pro.setter
    def remove_pay_pal_pro(self, remove_pay_pal_pro):
        """Sets the remove_pay_pal_pro of this PaymentsConfigurationWePay.


        :param remove_pay_pal_pro: The remove_pay_pal_pro of this PaymentsConfigurationWePay.  # noqa: E501
        :type: bool
        """

        self._remove_pay_pal_pro = remove_pay_pal_pro

    @property
    def restrictions(self):
        """Gets the restrictions of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The restrictions of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: PaymentsConfigurationRestrictions
        """
        return self._restrictions

    @restrictions.setter
    def restrictions(self, restrictions):
        """Sets the restrictions of this PaymentsConfigurationWePay.


        :param restrictions: The restrictions of this PaymentsConfigurationWePay.  # noqa: E501
        :type: PaymentsConfigurationRestrictions
        """

        self._restrictions = restrictions

    @property
    def short_pay_pal_marketing_text(self):
        """Gets the short_pay_pal_marketing_text of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The short_pay_pal_marketing_text of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: bool
        """
        return self._short_pay_pal_marketing_text

    @short_pay_pal_marketing_text.setter
    def short_pay_pal_marketing_text(self, short_pay_pal_marketing_text):
        """Sets the short_pay_pal_marketing_text of this PaymentsConfigurationWePay.


        :param short_pay_pal_marketing_text: The short_pay_pal_marketing_text of this PaymentsConfigurationWePay.  # noqa: E501
        :type: bool
        """

        self._short_pay_pal_marketing_text = short_pay_pal_marketing_text

    @property
    def show_ultra_cart_payments_disabled(self):
        """Gets the show_ultra_cart_payments_disabled of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The show_ultra_cart_payments_disabled of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: bool
        """
        return self._show_ultra_cart_payments_disabled

    @show_ultra_cart_payments_disabled.setter
    def show_ultra_cart_payments_disabled(self, show_ultra_cart_payments_disabled):
        """Sets the show_ultra_cart_payments_disabled of this PaymentsConfigurationWePay.


        :param show_ultra_cart_payments_disabled: The show_ultra_cart_payments_disabled of this PaymentsConfigurationWePay.  # noqa: E501
        :type: bool
        """

        self._show_ultra_cart_payments_disabled = show_ultra_cart_payments_disabled

    @property
    def show_ultra_cart_payments_intro(self):
        """Gets the show_ultra_cart_payments_intro of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The show_ultra_cart_payments_intro of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: bool
        """
        return self._show_ultra_cart_payments_intro

    @show_ultra_cart_payments_intro.setter
    def show_ultra_cart_payments_intro(self, show_ultra_cart_payments_intro):
        """Sets the show_ultra_cart_payments_intro of this PaymentsConfigurationWePay.


        :param show_ultra_cart_payments_intro: The show_ultra_cart_payments_intro of this PaymentsConfigurationWePay.  # noqa: E501
        :type: bool
        """

        self._show_ultra_cart_payments_intro = show_ultra_cart_payments_intro

    @property
    def show_ultra_cart_payments_verification(self):
        """Gets the show_ultra_cart_payments_verification of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The show_ultra_cart_payments_verification of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: bool
        """
        return self._show_ultra_cart_payments_verification

    @show_ultra_cart_payments_verification.setter
    def show_ultra_cart_payments_verification(self, show_ultra_cart_payments_verification):
        """Sets the show_ultra_cart_payments_verification of this PaymentsConfigurationWePay.


        :param show_ultra_cart_payments_verification: The show_ultra_cart_payments_verification of this PaymentsConfigurationWePay.  # noqa: E501
        :type: bool
        """

        self._show_ultra_cart_payments_verification = show_ultra_cart_payments_verification

    @property
    def show_ultra_cart_payments_verified(self):
        """Gets the show_ultra_cart_payments_verified of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The show_ultra_cart_payments_verified of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: bool
        """
        return self._show_ultra_cart_payments_verified

    @show_ultra_cart_payments_verified.setter
    def show_ultra_cart_payments_verified(self, show_ultra_cart_payments_verified):
        """Sets the show_ultra_cart_payments_verified of this PaymentsConfigurationWePay.


        :param show_ultra_cart_payments_verified: The show_ultra_cart_payments_verified of this PaymentsConfigurationWePay.  # noqa: E501
        :type: bool
        """

        self._show_ultra_cart_payments_verified = show_ultra_cart_payments_verified

    @property
    def wepay_account_update_uri(self):
        """Gets the wepay_account_update_uri of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_account_update_uri of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_account_update_uri

    @wepay_account_update_uri.setter
    def wepay_account_update_uri(self, wepay_account_update_uri):
        """Sets the wepay_account_update_uri of this PaymentsConfigurationWePay.


        :param wepay_account_update_uri: The wepay_account_update_uri of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_account_update_uri = wepay_account_update_uri

    @property
    def wepay_address1(self):
        """Gets the wepay_address1 of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_address1 of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_address1

    @wepay_address1.setter
    def wepay_address1(self, wepay_address1):
        """Sets the wepay_address1 of this PaymentsConfigurationWePay.


        :param wepay_address1: The wepay_address1 of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_address1 = wepay_address1

    @property
    def wepay_address2(self):
        """Gets the wepay_address2 of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_address2 of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_address2

    @wepay_address2.setter
    def wepay_address2(self, wepay_address2):
        """Sets the wepay_address2 of this PaymentsConfigurationWePay.


        :param wepay_address2: The wepay_address2 of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_address2 = wepay_address2

    @property
    def wepay_canada_accept_debit_cards(self):
        """Gets the wepay_canada_accept_debit_cards of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_canada_accept_debit_cards of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: bool
        """
        return self._wepay_canada_accept_debit_cards

    @wepay_canada_accept_debit_cards.setter
    def wepay_canada_accept_debit_cards(self, wepay_canada_accept_debit_cards):
        """Sets the wepay_canada_accept_debit_cards of this PaymentsConfigurationWePay.


        :param wepay_canada_accept_debit_cards: The wepay_canada_accept_debit_cards of this PaymentsConfigurationWePay.  # noqa: E501
        :type: bool
        """

        self._wepay_canada_accept_debit_cards = wepay_canada_accept_debit_cards

    @property
    def wepay_city(self):
        """Gets the wepay_city of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_city of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_city

    @wepay_city.setter
    def wepay_city(self, wepay_city):
        """Sets the wepay_city of this PaymentsConfigurationWePay.


        :param wepay_city: The wepay_city of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_city = wepay_city

    @property
    def wepay_company(self):
        """Gets the wepay_company of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_company of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_company

    @wepay_company.setter
    def wepay_company(self, wepay_company):
        """Sets the wepay_company of this PaymentsConfigurationWePay.


        :param wepay_company: The wepay_company of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_company = wepay_company

    @property
    def wepay_company_description(self):
        """Gets the wepay_company_description of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_company_description of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_company_description

    @wepay_company_description.setter
    def wepay_company_description(self, wepay_company_description):
        """Sets the wepay_company_description of this PaymentsConfigurationWePay.


        :param wepay_company_description: The wepay_company_description of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_company_description = wepay_company_description

    @property
    def wepay_console_hostname(self):
        """Gets the wepay_console_hostname of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_console_hostname of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_console_hostname

    @wepay_console_hostname.setter
    def wepay_console_hostname(self, wepay_console_hostname):
        """Sets the wepay_console_hostname of this PaymentsConfigurationWePay.


        :param wepay_console_hostname: The wepay_console_hostname of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_console_hostname = wepay_console_hostname

    @property
    def wepay_country(self):
        """Gets the wepay_country of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_country of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_country

    @wepay_country.setter
    def wepay_country(self, wepay_country):
        """Sets the wepay_country of this PaymentsConfigurationWePay.


        :param wepay_country: The wepay_country of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_country = wepay_country

    @property
    def wepay_currency(self):
        """Gets the wepay_currency of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_currency of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_currency

    @wepay_currency.setter
    def wepay_currency(self, wepay_currency):
        """Sets the wepay_currency of this PaymentsConfigurationWePay.


        :param wepay_currency: The wepay_currency of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_currency = wepay_currency

    @property
    def wepay_expected_revenue(self):
        """Gets the wepay_expected_revenue of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_expected_revenue of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_expected_revenue

    @wepay_expected_revenue.setter
    def wepay_expected_revenue(self, wepay_expected_revenue):
        """Sets the wepay_expected_revenue of this PaymentsConfigurationWePay.


        :param wepay_expected_revenue: The wepay_expected_revenue of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_expected_revenue = wepay_expected_revenue

    @property
    def wepay_industry(self):
        """Gets the wepay_industry of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_industry of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_industry

    @wepay_industry.setter
    def wepay_industry(self, wepay_industry):
        """Sets the wepay_industry of this PaymentsConfigurationWePay.


        :param wepay_industry: The wepay_industry of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_industry = wepay_industry

    @property
    def wepay_owner_email(self):
        """Gets the wepay_owner_email of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_owner_email of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_owner_email

    @wepay_owner_email.setter
    def wepay_owner_email(self, wepay_owner_email):
        """Sets the wepay_owner_email of this PaymentsConfigurationWePay.


        :param wepay_owner_email: The wepay_owner_email of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_owner_email = wepay_owner_email

    @property
    def wepay_owner_name(self):
        """Gets the wepay_owner_name of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_owner_name of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_owner_name

    @wepay_owner_name.setter
    def wepay_owner_name(self, wepay_owner_name):
        """Sets the wepay_owner_name of this PaymentsConfigurationWePay.


        :param wepay_owner_name: The wepay_owner_name of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_owner_name = wepay_owner_name

    @property
    def wepay_owner_phone(self):
        """Gets the wepay_owner_phone of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_owner_phone of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_owner_phone

    @wepay_owner_phone.setter
    def wepay_owner_phone(self, wepay_owner_phone):
        """Sets the wepay_owner_phone of this PaymentsConfigurationWePay.


        :param wepay_owner_phone: The wepay_owner_phone of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_owner_phone = wepay_owner_phone

    @property
    def wepay_state(self):
        """Gets the wepay_state of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_state of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_state

    @wepay_state.setter
    def wepay_state(self, wepay_state):
        """Sets the wepay_state of this PaymentsConfigurationWePay.


        :param wepay_state: The wepay_state of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_state = wepay_state

    @property
    def wepay_website_url(self):
        """Gets the wepay_website_url of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_website_url of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_website_url

    @wepay_website_url.setter
    def wepay_website_url(self, wepay_website_url):
        """Sets the wepay_website_url of this PaymentsConfigurationWePay.


        :param wepay_website_url: The wepay_website_url of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_website_url = wepay_website_url

    @property
    def wepay_zip(self):
        """Gets the wepay_zip of this PaymentsConfigurationWePay.  # noqa: E501


        :return: The wepay_zip of this PaymentsConfigurationWePay.  # noqa: E501
        :rtype: str
        """
        return self._wepay_zip

    @wepay_zip.setter
    def wepay_zip(self, wepay_zip):
        """Sets the wepay_zip of this PaymentsConfigurationWePay.


        :param wepay_zip: The wepay_zip of this PaymentsConfigurationWePay.  # noqa: E501
        :type: str
        """

        self._wepay_zip = wepay_zip

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PaymentsConfigurationWePay, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PaymentsConfigurationWePay):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
