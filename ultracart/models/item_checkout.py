# coding: utf-8

"""
    UltraCart Rest API V2

    This is the next generation UltraCart REST API...

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class ItemCheckout(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, suppress_buysafe=None, terms=None, terms_translated_text_instance_oid=None):
        """
        ItemCheckout - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'suppress_buysafe': 'bool',
            'terms': 'str',
            'terms_translated_text_instance_oid': 'int'
        }

        self.attribute_map = {
            'suppress_buysafe': 'suppress_buysafe',
            'terms': 'terms',
            'terms_translated_text_instance_oid': 'terms_translated_text_instance_oid'
        }

        self._suppress_buysafe = suppress_buysafe
        self._terms = terms
        self._terms_translated_text_instance_oid = terms_translated_text_instance_oid

    @property
    def suppress_buysafe(self):
        """
        Gets the suppress_buysafe of this ItemCheckout.
        True to suppress buySAFE

        :return: The suppress_buysafe of this ItemCheckout.
        :rtype: bool
        """
        return self._suppress_buysafe

    @suppress_buysafe.setter
    def suppress_buysafe(self, suppress_buysafe):
        """
        Sets the suppress_buysafe of this ItemCheckout.
        True to suppress buySAFE

        :param suppress_buysafe: The suppress_buysafe of this ItemCheckout.
        :type: bool
        """

        self._suppress_buysafe = suppress_buysafe

    @property
    def terms(self):
        """
        Gets the terms of this ItemCheckout.
        Terms for purchasing this item

        :return: The terms of this ItemCheckout.
        :rtype: str
        """
        return self._terms

    @terms.setter
    def terms(self, terms):
        """
        Sets the terms of this ItemCheckout.
        Terms for purchasing this item

        :param terms: The terms of this ItemCheckout.
        :type: str
        """

        if not terms:
            raise ValueError("Invalid value for `terms`, must not be `None`")
        if len(terms) > 10000:
            raise ValueError("Invalid value for `terms`, length must be less than `10000`")

        self._terms = terms

    @property
    def terms_translated_text_instance_oid(self):
        """
        Gets the terms_translated_text_instance_oid of this ItemCheckout.
        Terms translated text instance identifier

        :return: The terms_translated_text_instance_oid of this ItemCheckout.
        :rtype: int
        """
        return self._terms_translated_text_instance_oid

    @terms_translated_text_instance_oid.setter
    def terms_translated_text_instance_oid(self, terms_translated_text_instance_oid):
        """
        Sets the terms_translated_text_instance_oid of this ItemCheckout.
        Terms translated text instance identifier

        :param terms_translated_text_instance_oid: The terms_translated_text_instance_oid of this ItemCheckout.
        :type: int
        """

        self._terms_translated_text_instance_oid = terms_translated_text_instance_oid

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
