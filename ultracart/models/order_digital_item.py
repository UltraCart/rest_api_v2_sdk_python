# coding: utf-8

"""
    UltraCart Rest API V2

    UltraCart REST API Version 2  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class OrderDigitalItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'file_size': 'int',
        'last_download': 'str',
        'last_download_ip_address': 'str',
        'original_filename': 'str',
        'product_code': 'str',
        'product_description': 'str',
        'remaining_downloads': 'int',
        'url': 'str'
    }

    attribute_map = {
        'file_size': 'file_size',
        'last_download': 'last_download',
        'last_download_ip_address': 'last_download_ip_address',
        'original_filename': 'original_filename',
        'product_code': 'product_code',
        'product_description': 'product_description',
        'remaining_downloads': 'remaining_downloads',
        'url': 'url'
    }

    def __init__(self, file_size=None, last_download=None, last_download_ip_address=None, original_filename=None, product_code=None, product_description=None, remaining_downloads=None, url=None):  # noqa: E501
        """OrderDigitalItem - a model defined in Swagger"""  # noqa: E501

        self._file_size = None
        self._last_download = None
        self._last_download_ip_address = None
        self._original_filename = None
        self._product_code = None
        self._product_description = None
        self._remaining_downloads = None
        self._url = None
        self.discriminator = None

        if file_size is not None:
            self.file_size = file_size
        if last_download is not None:
            self.last_download = last_download
        if last_download_ip_address is not None:
            self.last_download_ip_address = last_download_ip_address
        if original_filename is not None:
            self.original_filename = original_filename
        if product_code is not None:
            self.product_code = product_code
        if product_description is not None:
            self.product_description = product_description
        if remaining_downloads is not None:
            self.remaining_downloads = remaining_downloads
        if url is not None:
            self.url = url

    @property
    def file_size(self):
        """Gets the file_size of this OrderDigitalItem.  # noqa: E501

        File size  # noqa: E501

        :return: The file_size of this OrderDigitalItem.  # noqa: E501
        :rtype: int
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this OrderDigitalItem.

        File size  # noqa: E501

        :param file_size: The file_size of this OrderDigitalItem.  # noqa: E501
        :type: int
        """

        self._file_size = file_size

    @property
    def last_download(self):
        """Gets the last_download of this OrderDigitalItem.  # noqa: E501

        Last download  # noqa: E501

        :return: The last_download of this OrderDigitalItem.  # noqa: E501
        :rtype: str
        """
        return self._last_download

    @last_download.setter
    def last_download(self, last_download):
        """Sets the last_download of this OrderDigitalItem.

        Last download  # noqa: E501

        :param last_download: The last_download of this OrderDigitalItem.  # noqa: E501
        :type: str
        """

        self._last_download = last_download

    @property
    def last_download_ip_address(self):
        """Gets the last_download_ip_address of this OrderDigitalItem.  # noqa: E501

        IP address that performed the last download  # noqa: E501

        :return: The last_download_ip_address of this OrderDigitalItem.  # noqa: E501
        :rtype: str
        """
        return self._last_download_ip_address

    @last_download_ip_address.setter
    def last_download_ip_address(self, last_download_ip_address):
        """Sets the last_download_ip_address of this OrderDigitalItem.

        IP address that performed the last download  # noqa: E501

        :param last_download_ip_address: The last_download_ip_address of this OrderDigitalItem.  # noqa: E501
        :type: str
        """

        self._last_download_ip_address = last_download_ip_address

    @property
    def original_filename(self):
        """Gets the original_filename of this OrderDigitalItem.  # noqa: E501

        Original file name  # noqa: E501

        :return: The original_filename of this OrderDigitalItem.  # noqa: E501
        :rtype: str
        """
        return self._original_filename

    @original_filename.setter
    def original_filename(self, original_filename):
        """Sets the original_filename of this OrderDigitalItem.

        Original file name  # noqa: E501

        :param original_filename: The original_filename of this OrderDigitalItem.  # noqa: E501
        :type: str
        """

        self._original_filename = original_filename

    @property
    def product_code(self):
        """Gets the product_code of this OrderDigitalItem.  # noqa: E501

        Item id associated with this item  # noqa: E501

        :return: The product_code of this OrderDigitalItem.  # noqa: E501
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this OrderDigitalItem.

        Item id associated with this item  # noqa: E501

        :param product_code: The product_code of this OrderDigitalItem.  # noqa: E501
        :type: str
        """

        self._product_code = product_code

    @property
    def product_description(self):
        """Gets the product_description of this OrderDigitalItem.  # noqa: E501

        Item description associated with this item  # noqa: E501

        :return: The product_description of this OrderDigitalItem.  # noqa: E501
        :rtype: str
        """
        return self._product_description

    @product_description.setter
    def product_description(self, product_description):
        """Sets the product_description of this OrderDigitalItem.

        Item description associated with this item  # noqa: E501

        :param product_description: The product_description of this OrderDigitalItem.  # noqa: E501
        :type: str
        """

        self._product_description = product_description

    @property
    def remaining_downloads(self):
        """Gets the remaining_downloads of this OrderDigitalItem.  # noqa: E501

        Remaining number of downloads  # noqa: E501

        :return: The remaining_downloads of this OrderDigitalItem.  # noqa: E501
        :rtype: int
        """
        return self._remaining_downloads

    @remaining_downloads.setter
    def remaining_downloads(self, remaining_downloads):
        """Sets the remaining_downloads of this OrderDigitalItem.

        Remaining number of downloads  # noqa: E501

        :param remaining_downloads: The remaining_downloads of this OrderDigitalItem.  # noqa: E501
        :type: int
        """

        self._remaining_downloads = remaining_downloads

    @property
    def url(self):
        """Gets the url of this OrderDigitalItem.  # noqa: E501

        URL that the customer can click to download the specific digital item  # noqa: E501

        :return: The url of this OrderDigitalItem.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this OrderDigitalItem.

        URL that the customer can click to download the specific digital item  # noqa: E501

        :param url: The url of this OrderDigitalItem.  # noqa: E501
        :type: str
        """

        self._url = url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OrderDigitalItem, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrderDigitalItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
