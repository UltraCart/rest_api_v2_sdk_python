# coding: utf-8

"""
    UltraCart Rest API V2

    This is the next generation UltraCart REST API...

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class ItemChargebackAdjustmentRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, chargeback_adjustment_request_oid=None, description=None, reason_code=None):
        """
        ItemChargebackAdjustmentRequest - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'chargeback_adjustment_request_oid': 'int',
            'description': 'str',
            'reason_code': 'str'
        }

        self.attribute_map = {
            'chargeback_adjustment_request_oid': 'chargeback_adjustment_request_oid',
            'description': 'description',
            'reason_code': 'reason_code'
        }

        self._chargeback_adjustment_request_oid = chargeback_adjustment_request_oid
        self._description = description
        self._reason_code = reason_code

    @property
    def chargeback_adjustment_request_oid(self):
        """
        Gets the chargeback_adjustment_request_oid of this ItemChargebackAdjustmentRequest.
        Chargeback adjustment request object identifier

        :return: The chargeback_adjustment_request_oid of this ItemChargebackAdjustmentRequest.
        :rtype: int
        """
        return self._chargeback_adjustment_request_oid

    @chargeback_adjustment_request_oid.setter
    def chargeback_adjustment_request_oid(self, chargeback_adjustment_request_oid):
        """
        Sets the chargeback_adjustment_request_oid of this ItemChargebackAdjustmentRequest.
        Chargeback adjustment request object identifier

        :param chargeback_adjustment_request_oid: The chargeback_adjustment_request_oid of this ItemChargebackAdjustmentRequest.
        :type: int
        """

        self._chargeback_adjustment_request_oid = chargeback_adjustment_request_oid

    @property
    def description(self):
        """
        Gets the description of this ItemChargebackAdjustmentRequest.
        Description

        :return: The description of this ItemChargebackAdjustmentRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this ItemChargebackAdjustmentRequest.
        Description

        :param description: The description of this ItemChargebackAdjustmentRequest.
        :type: str
        """

        self._description = description

    @property
    def reason_code(self):
        """
        Gets the reason_code of this ItemChargebackAdjustmentRequest.
        Reason code

        :return: The reason_code of this ItemChargebackAdjustmentRequest.
        :rtype: str
        """
        return self._reason_code

    @reason_code.setter
    def reason_code(self, reason_code):
        """
        Sets the reason_code of this ItemChargebackAdjustmentRequest.
        Reason code

        :param reason_code: The reason_code of this ItemChargebackAdjustmentRequest.
        :type: str
        """

        self._reason_code = reason_code

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
