# coding: utf-8

"""
    UltraCart Rest API V2

    UltraCart REST API Version 2  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class HitSessionUtm(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fb_ad_id': 'str',
        'fbclid': 'str',
        'gbraid': 'str',
        'gclid': 'str',
        'msclkid': 'str',
        'ttclid': 'str',
        'uc_message_id': 'str',
        'utm_campaign': 'str',
        'utm_content': 'str',
        'utm_id': 'str',
        'utm_medium': 'str',
        'utm_source': 'str',
        'utm_term': 'str',
        'vmcid': 'str',
        'wbraid': 'str'
    }

    attribute_map = {
        'fb_ad_id': 'fb_ad_id',
        'fbclid': 'fbclid',
        'gbraid': 'gbraid',
        'gclid': 'gclid',
        'msclkid': 'msclkid',
        'ttclid': 'ttclid',
        'uc_message_id': 'uc_message_id',
        'utm_campaign': 'utm_campaign',
        'utm_content': 'utm_content',
        'utm_id': 'utm_id',
        'utm_medium': 'utm_medium',
        'utm_source': 'utm_source',
        'utm_term': 'utm_term',
        'vmcid': 'vmcid',
        'wbraid': 'wbraid'
    }

    def __init__(self, fb_ad_id=None, fbclid=None, gbraid=None, gclid=None, msclkid=None, ttclid=None, uc_message_id=None, utm_campaign=None, utm_content=None, utm_id=None, utm_medium=None, utm_source=None, utm_term=None, vmcid=None, wbraid=None):  # noqa: E501
        """HitSessionUtm - a model defined in Swagger"""  # noqa: E501

        self._fb_ad_id = None
        self._fbclid = None
        self._gbraid = None
        self._gclid = None
        self._msclkid = None
        self._ttclid = None
        self._uc_message_id = None
        self._utm_campaign = None
        self._utm_content = None
        self._utm_id = None
        self._utm_medium = None
        self._utm_source = None
        self._utm_term = None
        self._vmcid = None
        self._wbraid = None
        self.discriminator = None

        if fb_ad_id is not None:
            self.fb_ad_id = fb_ad_id
        if fbclid is not None:
            self.fbclid = fbclid
        if gbraid is not None:
            self.gbraid = gbraid
        if gclid is not None:
            self.gclid = gclid
        if msclkid is not None:
            self.msclkid = msclkid
        if ttclid is not None:
            self.ttclid = ttclid
        if uc_message_id is not None:
            self.uc_message_id = uc_message_id
        if utm_campaign is not None:
            self.utm_campaign = utm_campaign
        if utm_content is not None:
            self.utm_content = utm_content
        if utm_id is not None:
            self.utm_id = utm_id
        if utm_medium is not None:
            self.utm_medium = utm_medium
        if utm_source is not None:
            self.utm_source = utm_source
        if utm_term is not None:
            self.utm_term = utm_term
        if vmcid is not None:
            self.vmcid = vmcid
        if wbraid is not None:
            self.wbraid = wbraid

    @property
    def fb_ad_id(self):
        """Gets the fb_ad_id of this HitSessionUtm.  # noqa: E501


        :return: The fb_ad_id of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._fb_ad_id

    @fb_ad_id.setter
    def fb_ad_id(self, fb_ad_id):
        """Sets the fb_ad_id of this HitSessionUtm.


        :param fb_ad_id: The fb_ad_id of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._fb_ad_id = fb_ad_id

    @property
    def fbclid(self):
        """Gets the fbclid of this HitSessionUtm.  # noqa: E501


        :return: The fbclid of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._fbclid

    @fbclid.setter
    def fbclid(self, fbclid):
        """Sets the fbclid of this HitSessionUtm.


        :param fbclid: The fbclid of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._fbclid = fbclid

    @property
    def gbraid(self):
        """Gets the gbraid of this HitSessionUtm.  # noqa: E501


        :return: The gbraid of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._gbraid

    @gbraid.setter
    def gbraid(self, gbraid):
        """Sets the gbraid of this HitSessionUtm.


        :param gbraid: The gbraid of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._gbraid = gbraid

    @property
    def gclid(self):
        """Gets the gclid of this HitSessionUtm.  # noqa: E501


        :return: The gclid of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._gclid

    @gclid.setter
    def gclid(self, gclid):
        """Sets the gclid of this HitSessionUtm.


        :param gclid: The gclid of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._gclid = gclid

    @property
    def msclkid(self):
        """Gets the msclkid of this HitSessionUtm.  # noqa: E501


        :return: The msclkid of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._msclkid

    @msclkid.setter
    def msclkid(self, msclkid):
        """Sets the msclkid of this HitSessionUtm.


        :param msclkid: The msclkid of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._msclkid = msclkid

    @property
    def ttclid(self):
        """Gets the ttclid of this HitSessionUtm.  # noqa: E501


        :return: The ttclid of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._ttclid

    @ttclid.setter
    def ttclid(self, ttclid):
        """Sets the ttclid of this HitSessionUtm.


        :param ttclid: The ttclid of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._ttclid = ttclid

    @property
    def uc_message_id(self):
        """Gets the uc_message_id of this HitSessionUtm.  # noqa: E501


        :return: The uc_message_id of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._uc_message_id

    @uc_message_id.setter
    def uc_message_id(self, uc_message_id):
        """Sets the uc_message_id of this HitSessionUtm.


        :param uc_message_id: The uc_message_id of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._uc_message_id = uc_message_id

    @property
    def utm_campaign(self):
        """Gets the utm_campaign of this HitSessionUtm.  # noqa: E501


        :return: The utm_campaign of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._utm_campaign

    @utm_campaign.setter
    def utm_campaign(self, utm_campaign):
        """Sets the utm_campaign of this HitSessionUtm.


        :param utm_campaign: The utm_campaign of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._utm_campaign = utm_campaign

    @property
    def utm_content(self):
        """Gets the utm_content of this HitSessionUtm.  # noqa: E501


        :return: The utm_content of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._utm_content

    @utm_content.setter
    def utm_content(self, utm_content):
        """Sets the utm_content of this HitSessionUtm.


        :param utm_content: The utm_content of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._utm_content = utm_content

    @property
    def utm_id(self):
        """Gets the utm_id of this HitSessionUtm.  # noqa: E501


        :return: The utm_id of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._utm_id

    @utm_id.setter
    def utm_id(self, utm_id):
        """Sets the utm_id of this HitSessionUtm.


        :param utm_id: The utm_id of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._utm_id = utm_id

    @property
    def utm_medium(self):
        """Gets the utm_medium of this HitSessionUtm.  # noqa: E501


        :return: The utm_medium of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._utm_medium

    @utm_medium.setter
    def utm_medium(self, utm_medium):
        """Sets the utm_medium of this HitSessionUtm.


        :param utm_medium: The utm_medium of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._utm_medium = utm_medium

    @property
    def utm_source(self):
        """Gets the utm_source of this HitSessionUtm.  # noqa: E501


        :return: The utm_source of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._utm_source

    @utm_source.setter
    def utm_source(self, utm_source):
        """Sets the utm_source of this HitSessionUtm.


        :param utm_source: The utm_source of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._utm_source = utm_source

    @property
    def utm_term(self):
        """Gets the utm_term of this HitSessionUtm.  # noqa: E501


        :return: The utm_term of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._utm_term

    @utm_term.setter
    def utm_term(self, utm_term):
        """Sets the utm_term of this HitSessionUtm.


        :param utm_term: The utm_term of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._utm_term = utm_term

    @property
    def vmcid(self):
        """Gets the vmcid of this HitSessionUtm.  # noqa: E501


        :return: The vmcid of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._vmcid

    @vmcid.setter
    def vmcid(self, vmcid):
        """Sets the vmcid of this HitSessionUtm.


        :param vmcid: The vmcid of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._vmcid = vmcid

    @property
    def wbraid(self):
        """Gets the wbraid of this HitSessionUtm.  # noqa: E501


        :return: The wbraid of this HitSessionUtm.  # noqa: E501
        :rtype: str
        """
        return self._wbraid

    @wbraid.setter
    def wbraid(self, wbraid):
        """Sets the wbraid of this HitSessionUtm.


        :param wbraid: The wbraid of this HitSessionUtm.  # noqa: E501
        :type: str
        """

        self._wbraid = wbraid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(HitSessionUtm, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HitSessionUtm):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
