# coding: utf-8

"""
    UltraCart Rest API V2

    UltraCart REST API Version 2  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class RtgSummary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'gateways': 'list[RtgSummaryGateway]',
        'info_message': 'str',
        'migration_rtg_code': 'str',
        'migration_single_gateway_name': 'str',
        'show_delay_auto_orders': 'bool',
        'show_migration': 'bool',
        'warning': 'str'
    }

    attribute_map = {
        'gateways': 'gateways',
        'info_message': 'info_message',
        'migration_rtg_code': 'migration_rtg_code',
        'migration_single_gateway_name': 'migration_single_gateway_name',
        'show_delay_auto_orders': 'show_delay_auto_orders',
        'show_migration': 'show_migration',
        'warning': 'warning'
    }

    def __init__(self, gateways=None, info_message=None, migration_rtg_code=None, migration_single_gateway_name=None, show_delay_auto_orders=None, show_migration=None, warning=None):  # noqa: E501
        """RtgSummary - a model defined in Swagger"""  # noqa: E501

        self._gateways = None
        self._info_message = None
        self._migration_rtg_code = None
        self._migration_single_gateway_name = None
        self._show_delay_auto_orders = None
        self._show_migration = None
        self._warning = None
        self.discriminator = None

        if gateways is not None:
            self.gateways = gateways
        if info_message is not None:
            self.info_message = info_message
        if migration_rtg_code is not None:
            self.migration_rtg_code = migration_rtg_code
        if migration_single_gateway_name is not None:
            self.migration_single_gateway_name = migration_single_gateway_name
        if show_delay_auto_orders is not None:
            self.show_delay_auto_orders = show_delay_auto_orders
        if show_migration is not None:
            self.show_migration = show_migration
        if warning is not None:
            self.warning = warning

    @property
    def gateways(self):
        """Gets the gateways of this RtgSummary.  # noqa: E501


        :return: The gateways of this RtgSummary.  # noqa: E501
        :rtype: list[RtgSummaryGateway]
        """
        return self._gateways

    @gateways.setter
    def gateways(self, gateways):
        """Sets the gateways of this RtgSummary.


        :param gateways: The gateways of this RtgSummary.  # noqa: E501
        :type: list[RtgSummaryGateway]
        """

        self._gateways = gateways

    @property
    def info_message(self):
        """Gets the info_message of this RtgSummary.  # noqa: E501


        :return: The info_message of this RtgSummary.  # noqa: E501
        :rtype: str
        """
        return self._info_message

    @info_message.setter
    def info_message(self, info_message):
        """Sets the info_message of this RtgSummary.


        :param info_message: The info_message of this RtgSummary.  # noqa: E501
        :type: str
        """

        self._info_message = info_message

    @property
    def migration_rtg_code(self):
        """Gets the migration_rtg_code of this RtgSummary.  # noqa: E501


        :return: The migration_rtg_code of this RtgSummary.  # noqa: E501
        :rtype: str
        """
        return self._migration_rtg_code

    @migration_rtg_code.setter
    def migration_rtg_code(self, migration_rtg_code):
        """Sets the migration_rtg_code of this RtgSummary.


        :param migration_rtg_code: The migration_rtg_code of this RtgSummary.  # noqa: E501
        :type: str
        """

        self._migration_rtg_code = migration_rtg_code

    @property
    def migration_single_gateway_name(self):
        """Gets the migration_single_gateway_name of this RtgSummary.  # noqa: E501


        :return: The migration_single_gateway_name of this RtgSummary.  # noqa: E501
        :rtype: str
        """
        return self._migration_single_gateway_name

    @migration_single_gateway_name.setter
    def migration_single_gateway_name(self, migration_single_gateway_name):
        """Sets the migration_single_gateway_name of this RtgSummary.


        :param migration_single_gateway_name: The migration_single_gateway_name of this RtgSummary.  # noqa: E501
        :type: str
        """

        self._migration_single_gateway_name = migration_single_gateway_name

    @property
    def show_delay_auto_orders(self):
        """Gets the show_delay_auto_orders of this RtgSummary.  # noqa: E501


        :return: The show_delay_auto_orders of this RtgSummary.  # noqa: E501
        :rtype: bool
        """
        return self._show_delay_auto_orders

    @show_delay_auto_orders.setter
    def show_delay_auto_orders(self, show_delay_auto_orders):
        """Sets the show_delay_auto_orders of this RtgSummary.


        :param show_delay_auto_orders: The show_delay_auto_orders of this RtgSummary.  # noqa: E501
        :type: bool
        """

        self._show_delay_auto_orders = show_delay_auto_orders

    @property
    def show_migration(self):
        """Gets the show_migration of this RtgSummary.  # noqa: E501


        :return: The show_migration of this RtgSummary.  # noqa: E501
        :rtype: bool
        """
        return self._show_migration

    @show_migration.setter
    def show_migration(self, show_migration):
        """Sets the show_migration of this RtgSummary.


        :param show_migration: The show_migration of this RtgSummary.  # noqa: E501
        :type: bool
        """

        self._show_migration = show_migration

    @property
    def warning(self):
        """Gets the warning of this RtgSummary.  # noqa: E501


        :return: The warning of this RtgSummary.  # noqa: E501
        :rtype: str
        """
        return self._warning

    @warning.setter
    def warning(self, warning):
        """Sets the warning of this RtgSummary.


        :param warning: The warning of this RtgSummary.  # noqa: E501
        :type: str
        """

        self._warning = warning

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RtgSummary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RtgSummary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
