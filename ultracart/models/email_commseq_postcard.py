# coding: utf-8

"""
    UltraCart Rest API V2

    UltraCart REST API Version 2  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class EmailCommseqPostcard(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'deleted': 'bool',
        'edited_by_user': 'str',
        'email_communication_sequence_postcard_uuid': 'str',
        'filter_profile_equation_json': 'str',
        'merchant_id': 'str',
        'postcard_back_container_cjson': 'str',
        'postcard_back_container_uuid': 'str',
        'postcard_container_cjson_last_modified_dts': 'str',
        'postcard_front_container_cjson': 'str',
        'postcard_front_container_uuid': 'str',
        'storefront_oid': 'int'
    }

    attribute_map = {
        'deleted': 'deleted',
        'edited_by_user': 'edited_by_user',
        'email_communication_sequence_postcard_uuid': 'email_communication_sequence_postcard_uuid',
        'filter_profile_equation_json': 'filter_profile_equation_json',
        'merchant_id': 'merchant_id',
        'postcard_back_container_cjson': 'postcard_back_container_cjson',
        'postcard_back_container_uuid': 'postcard_back_container_uuid',
        'postcard_container_cjson_last_modified_dts': 'postcard_container_cjson_last_modified_dts',
        'postcard_front_container_cjson': 'postcard_front_container_cjson',
        'postcard_front_container_uuid': 'postcard_front_container_uuid',
        'storefront_oid': 'storefront_oid'
    }

    def __init__(self, deleted=None, edited_by_user=None, email_communication_sequence_postcard_uuid=None, filter_profile_equation_json=None, merchant_id=None, postcard_back_container_cjson=None, postcard_back_container_uuid=None, postcard_container_cjson_last_modified_dts=None, postcard_front_container_cjson=None, postcard_front_container_uuid=None, storefront_oid=None):  # noqa: E501
        """EmailCommseqPostcard - a model defined in Swagger"""  # noqa: E501

        self._deleted = None
        self._edited_by_user = None
        self._email_communication_sequence_postcard_uuid = None
        self._filter_profile_equation_json = None
        self._merchant_id = None
        self._postcard_back_container_cjson = None
        self._postcard_back_container_uuid = None
        self._postcard_container_cjson_last_modified_dts = None
        self._postcard_front_container_cjson = None
        self._postcard_front_container_uuid = None
        self._storefront_oid = None
        self.discriminator = None

        if deleted is not None:
            self.deleted = deleted
        if edited_by_user is not None:
            self.edited_by_user = edited_by_user
        if email_communication_sequence_postcard_uuid is not None:
            self.email_communication_sequence_postcard_uuid = email_communication_sequence_postcard_uuid
        if filter_profile_equation_json is not None:
            self.filter_profile_equation_json = filter_profile_equation_json
        if merchant_id is not None:
            self.merchant_id = merchant_id
        if postcard_back_container_cjson is not None:
            self.postcard_back_container_cjson = postcard_back_container_cjson
        if postcard_back_container_uuid is not None:
            self.postcard_back_container_uuid = postcard_back_container_uuid
        if postcard_container_cjson_last_modified_dts is not None:
            self.postcard_container_cjson_last_modified_dts = postcard_container_cjson_last_modified_dts
        if postcard_front_container_cjson is not None:
            self.postcard_front_container_cjson = postcard_front_container_cjson
        if postcard_front_container_uuid is not None:
            self.postcard_front_container_uuid = postcard_front_container_uuid
        if storefront_oid is not None:
            self.storefront_oid = storefront_oid

    @property
    def deleted(self):
        """Gets the deleted of this EmailCommseqPostcard.  # noqa: E501

        Deleted  # noqa: E501

        :return: The deleted of this EmailCommseqPostcard.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this EmailCommseqPostcard.

        Deleted  # noqa: E501

        :param deleted: The deleted of this EmailCommseqPostcard.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def edited_by_user(self):
        """Gets the edited_by_user of this EmailCommseqPostcard.  # noqa: E501

        Edited by user  # noqa: E501

        :return: The edited_by_user of this EmailCommseqPostcard.  # noqa: E501
        :rtype: str
        """
        return self._edited_by_user

    @edited_by_user.setter
    def edited_by_user(self, edited_by_user):
        """Sets the edited_by_user of this EmailCommseqPostcard.

        Edited by user  # noqa: E501

        :param edited_by_user: The edited_by_user of this EmailCommseqPostcard.  # noqa: E501
        :type: str
        """

        self._edited_by_user = edited_by_user

    @property
    def email_communication_sequence_postcard_uuid(self):
        """Gets the email_communication_sequence_postcard_uuid of this EmailCommseqPostcard.  # noqa: E501

        communication sequence postcard uuid  # noqa: E501

        :return: The email_communication_sequence_postcard_uuid of this EmailCommseqPostcard.  # noqa: E501
        :rtype: str
        """
        return self._email_communication_sequence_postcard_uuid

    @email_communication_sequence_postcard_uuid.setter
    def email_communication_sequence_postcard_uuid(self, email_communication_sequence_postcard_uuid):
        """Sets the email_communication_sequence_postcard_uuid of this EmailCommseqPostcard.

        communication sequence postcard uuid  # noqa: E501

        :param email_communication_sequence_postcard_uuid: The email_communication_sequence_postcard_uuid of this EmailCommseqPostcard.  # noqa: E501
        :type: str
        """

        self._email_communication_sequence_postcard_uuid = email_communication_sequence_postcard_uuid

    @property
    def filter_profile_equation_json(self):
        """Gets the filter_profile_equation_json of this EmailCommseqPostcard.  # noqa: E501

        Filter profile equation json  # noqa: E501

        :return: The filter_profile_equation_json of this EmailCommseqPostcard.  # noqa: E501
        :rtype: str
        """
        return self._filter_profile_equation_json

    @filter_profile_equation_json.setter
    def filter_profile_equation_json(self, filter_profile_equation_json):
        """Sets the filter_profile_equation_json of this EmailCommseqPostcard.

        Filter profile equation json  # noqa: E501

        :param filter_profile_equation_json: The filter_profile_equation_json of this EmailCommseqPostcard.  # noqa: E501
        :type: str
        """

        self._filter_profile_equation_json = filter_profile_equation_json

    @property
    def merchant_id(self):
        """Gets the merchant_id of this EmailCommseqPostcard.  # noqa: E501

        Merchant ID  # noqa: E501

        :return: The merchant_id of this EmailCommseqPostcard.  # noqa: E501
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this EmailCommseqPostcard.

        Merchant ID  # noqa: E501

        :param merchant_id: The merchant_id of this EmailCommseqPostcard.  # noqa: E501
        :type: str
        """

        self._merchant_id = merchant_id

    @property
    def postcard_back_container_cjson(self):
        """Gets the postcard_back_container_cjson of this EmailCommseqPostcard.  # noqa: E501

        Postcard back container cjson  # noqa: E501

        :return: The postcard_back_container_cjson of this EmailCommseqPostcard.  # noqa: E501
        :rtype: str
        """
        return self._postcard_back_container_cjson

    @postcard_back_container_cjson.setter
    def postcard_back_container_cjson(self, postcard_back_container_cjson):
        """Sets the postcard_back_container_cjson of this EmailCommseqPostcard.

        Postcard back container cjson  # noqa: E501

        :param postcard_back_container_cjson: The postcard_back_container_cjson of this EmailCommseqPostcard.  # noqa: E501
        :type: str
        """

        self._postcard_back_container_cjson = postcard_back_container_cjson

    @property
    def postcard_back_container_uuid(self):
        """Gets the postcard_back_container_uuid of this EmailCommseqPostcard.  # noqa: E501

        Postcard back container uuid  # noqa: E501

        :return: The postcard_back_container_uuid of this EmailCommseqPostcard.  # noqa: E501
        :rtype: str
        """
        return self._postcard_back_container_uuid

    @postcard_back_container_uuid.setter
    def postcard_back_container_uuid(self, postcard_back_container_uuid):
        """Sets the postcard_back_container_uuid of this EmailCommseqPostcard.

        Postcard back container uuid  # noqa: E501

        :param postcard_back_container_uuid: The postcard_back_container_uuid of this EmailCommseqPostcard.  # noqa: E501
        :type: str
        """

        self._postcard_back_container_uuid = postcard_back_container_uuid

    @property
    def postcard_container_cjson_last_modified_dts(self):
        """Gets the postcard_container_cjson_last_modified_dts of this EmailCommseqPostcard.  # noqa: E501

        Timestamp the last time the container was modified.  # noqa: E501

        :return: The postcard_container_cjson_last_modified_dts of this EmailCommseqPostcard.  # noqa: E501
        :rtype: str
        """
        return self._postcard_container_cjson_last_modified_dts

    @postcard_container_cjson_last_modified_dts.setter
    def postcard_container_cjson_last_modified_dts(self, postcard_container_cjson_last_modified_dts):
        """Sets the postcard_container_cjson_last_modified_dts of this EmailCommseqPostcard.

        Timestamp the last time the container was modified.  # noqa: E501

        :param postcard_container_cjson_last_modified_dts: The postcard_container_cjson_last_modified_dts of this EmailCommseqPostcard.  # noqa: E501
        :type: str
        """

        self._postcard_container_cjson_last_modified_dts = postcard_container_cjson_last_modified_dts

    @property
    def postcard_front_container_cjson(self):
        """Gets the postcard_front_container_cjson of this EmailCommseqPostcard.  # noqa: E501

        Postcard front container cjson  # noqa: E501

        :return: The postcard_front_container_cjson of this EmailCommseqPostcard.  # noqa: E501
        :rtype: str
        """
        return self._postcard_front_container_cjson

    @postcard_front_container_cjson.setter
    def postcard_front_container_cjson(self, postcard_front_container_cjson):
        """Sets the postcard_front_container_cjson of this EmailCommseqPostcard.

        Postcard front container cjson  # noqa: E501

        :param postcard_front_container_cjson: The postcard_front_container_cjson of this EmailCommseqPostcard.  # noqa: E501
        :type: str
        """

        self._postcard_front_container_cjson = postcard_front_container_cjson

    @property
    def postcard_front_container_uuid(self):
        """Gets the postcard_front_container_uuid of this EmailCommseqPostcard.  # noqa: E501

        Postcard front container uuid  # noqa: E501

        :return: The postcard_front_container_uuid of this EmailCommseqPostcard.  # noqa: E501
        :rtype: str
        """
        return self._postcard_front_container_uuid

    @postcard_front_container_uuid.setter
    def postcard_front_container_uuid(self, postcard_front_container_uuid):
        """Sets the postcard_front_container_uuid of this EmailCommseqPostcard.

        Postcard front container uuid  # noqa: E501

        :param postcard_front_container_uuid: The postcard_front_container_uuid of this EmailCommseqPostcard.  # noqa: E501
        :type: str
        """

        self._postcard_front_container_uuid = postcard_front_container_uuid

    @property
    def storefront_oid(self):
        """Gets the storefront_oid of this EmailCommseqPostcard.  # noqa: E501

        Storefront oid  # noqa: E501

        :return: The storefront_oid of this EmailCommseqPostcard.  # noqa: E501
        :rtype: int
        """
        return self._storefront_oid

    @storefront_oid.setter
    def storefront_oid(self, storefront_oid):
        """Sets the storefront_oid of this EmailCommseqPostcard.

        Storefront oid  # noqa: E501

        :param storefront_oid: The storefront_oid of this EmailCommseqPostcard.  # noqa: E501
        :type: int
        """

        self._storefront_oid = storefront_oid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EmailCommseqPostcard, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EmailCommseqPostcard):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
