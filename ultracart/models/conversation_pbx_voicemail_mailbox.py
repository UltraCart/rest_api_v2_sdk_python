# coding: utf-8

"""
    UltraCart Rest API V2

    UltraCart REST API Version 2  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ConversationPbxVoicemailMailbox(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'conversation_pbx_voicemail_mailbox_uuid': 'str',
        'merchant_id': 'str',
        'send_notices_to_email': 'str',
        'user_id': 'int',
        'voicemail_followup_play_audio_uuid': 'str',
        'voicemail_followup_say': 'str',
        'voicemail_followup_say_voice': 'str',
        'voicemail_mailbox_id': 'str',
        'voicemail_mailbox_type': 'str',
        'voicemail_prompt_play_audio_uuid': 'str',
        'voicemail_prompt_say': 'str',
        'voicemail_prompt_say_voice': 'str'
    }

    attribute_map = {
        'conversation_pbx_voicemail_mailbox_uuid': 'conversation_pbx_voicemail_mailbox_uuid',
        'merchant_id': 'merchant_id',
        'send_notices_to_email': 'send_notices_to_email',
        'user_id': 'user_id',
        'voicemail_followup_play_audio_uuid': 'voicemail_followup_play_audio_uuid',
        'voicemail_followup_say': 'voicemail_followup_say',
        'voicemail_followup_say_voice': 'voicemail_followup_say_voice',
        'voicemail_mailbox_id': 'voicemail_mailbox_id',
        'voicemail_mailbox_type': 'voicemail_mailbox_type',
        'voicemail_prompt_play_audio_uuid': 'voicemail_prompt_play_audio_uuid',
        'voicemail_prompt_say': 'voicemail_prompt_say',
        'voicemail_prompt_say_voice': 'voicemail_prompt_say_voice'
    }

    def __init__(self, conversation_pbx_voicemail_mailbox_uuid=None, merchant_id=None, send_notices_to_email=None, user_id=None, voicemail_followup_play_audio_uuid=None, voicemail_followup_say=None, voicemail_followup_say_voice=None, voicemail_mailbox_id=None, voicemail_mailbox_type=None, voicemail_prompt_play_audio_uuid=None, voicemail_prompt_say=None, voicemail_prompt_say_voice=None):  # noqa: E501
        """ConversationPbxVoicemailMailbox - a model defined in Swagger"""  # noqa: E501

        self._conversation_pbx_voicemail_mailbox_uuid = None
        self._merchant_id = None
        self._send_notices_to_email = None
        self._user_id = None
        self._voicemail_followup_play_audio_uuid = None
        self._voicemail_followup_say = None
        self._voicemail_followup_say_voice = None
        self._voicemail_mailbox_id = None
        self._voicemail_mailbox_type = None
        self._voicemail_prompt_play_audio_uuid = None
        self._voicemail_prompt_say = None
        self._voicemail_prompt_say_voice = None
        self.discriminator = None

        if conversation_pbx_voicemail_mailbox_uuid is not None:
            self.conversation_pbx_voicemail_mailbox_uuid = conversation_pbx_voicemail_mailbox_uuid
        if merchant_id is not None:
            self.merchant_id = merchant_id
        if send_notices_to_email is not None:
            self.send_notices_to_email = send_notices_to_email
        if user_id is not None:
            self.user_id = user_id
        if voicemail_followup_play_audio_uuid is not None:
            self.voicemail_followup_play_audio_uuid = voicemail_followup_play_audio_uuid
        if voicemail_followup_say is not None:
            self.voicemail_followup_say = voicemail_followup_say
        if voicemail_followup_say_voice is not None:
            self.voicemail_followup_say_voice = voicemail_followup_say_voice
        if voicemail_mailbox_id is not None:
            self.voicemail_mailbox_id = voicemail_mailbox_id
        if voicemail_mailbox_type is not None:
            self.voicemail_mailbox_type = voicemail_mailbox_type
        if voicemail_prompt_play_audio_uuid is not None:
            self.voicemail_prompt_play_audio_uuid = voicemail_prompt_play_audio_uuid
        if voicemail_prompt_say is not None:
            self.voicemail_prompt_say = voicemail_prompt_say
        if voicemail_prompt_say_voice is not None:
            self.voicemail_prompt_say_voice = voicemail_prompt_say_voice

    @property
    def conversation_pbx_voicemail_mailbox_uuid(self):
        """Gets the conversation_pbx_voicemail_mailbox_uuid of this ConversationPbxVoicemailMailbox.  # noqa: E501

        Conversation Pbx Voicemail Mailbox UUID  # noqa: E501

        :return: The conversation_pbx_voicemail_mailbox_uuid of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: str
        """
        return self._conversation_pbx_voicemail_mailbox_uuid

    @conversation_pbx_voicemail_mailbox_uuid.setter
    def conversation_pbx_voicemail_mailbox_uuid(self, conversation_pbx_voicemail_mailbox_uuid):
        """Sets the conversation_pbx_voicemail_mailbox_uuid of this ConversationPbxVoicemailMailbox.

        Conversation Pbx Voicemail Mailbox UUID  # noqa: E501

        :param conversation_pbx_voicemail_mailbox_uuid: The conversation_pbx_voicemail_mailbox_uuid of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: str
        """
        if conversation_pbx_voicemail_mailbox_uuid is not None and len(conversation_pbx_voicemail_mailbox_uuid) > 50:
            raise ValueError("Invalid value for `conversation_pbx_voicemail_mailbox_uuid`, length must be less than or equal to `50`")  # noqa: E501

        self._conversation_pbx_voicemail_mailbox_uuid = conversation_pbx_voicemail_mailbox_uuid

    @property
    def merchant_id(self):
        """Gets the merchant_id of this ConversationPbxVoicemailMailbox.  # noqa: E501

        Merchant Id  # noqa: E501

        :return: The merchant_id of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this ConversationPbxVoicemailMailbox.

        Merchant Id  # noqa: E501

        :param merchant_id: The merchant_id of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: str
        """
        if merchant_id is not None and len(merchant_id) > 5:
            raise ValueError("Invalid value for `merchant_id`, length must be less than or equal to `5`")  # noqa: E501

        self._merchant_id = merchant_id

    @property
    def send_notices_to_email(self):
        """Gets the send_notices_to_email of this ConversationPbxVoicemailMailbox.  # noqa: E501

        Send notices to email  # noqa: E501

        :return: The send_notices_to_email of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: str
        """
        return self._send_notices_to_email

    @send_notices_to_email.setter
    def send_notices_to_email(self, send_notices_to_email):
        """Sets the send_notices_to_email of this ConversationPbxVoicemailMailbox.

        Send notices to email  # noqa: E501

        :param send_notices_to_email: The send_notices_to_email of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: str
        """
        if send_notices_to_email is not None and len(send_notices_to_email) > 250:
            raise ValueError("Invalid value for `send_notices_to_email`, length must be less than or equal to `250`")  # noqa: E501

        self._send_notices_to_email = send_notices_to_email

    @property
    def user_id(self):
        """Gets the user_id of this ConversationPbxVoicemailMailbox.  # noqa: E501

        User Id  # noqa: E501

        :return: The user_id of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ConversationPbxVoicemailMailbox.

        User Id  # noqa: E501

        :param user_id: The user_id of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: int
        """

        self._user_id = user_id

    @property
    def voicemail_followup_play_audio_uuid(self):
        """Gets the voicemail_followup_play_audio_uuid of this ConversationPbxVoicemailMailbox.  # noqa: E501

        Voicemail follow play audio UUID  # noqa: E501

        :return: The voicemail_followup_play_audio_uuid of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: str
        """
        return self._voicemail_followup_play_audio_uuid

    @voicemail_followup_play_audio_uuid.setter
    def voicemail_followup_play_audio_uuid(self, voicemail_followup_play_audio_uuid):
        """Sets the voicemail_followup_play_audio_uuid of this ConversationPbxVoicemailMailbox.

        Voicemail follow play audio UUID  # noqa: E501

        :param voicemail_followup_play_audio_uuid: The voicemail_followup_play_audio_uuid of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: str
        """
        if voicemail_followup_play_audio_uuid is not None and len(voicemail_followup_play_audio_uuid) > 50:
            raise ValueError("Invalid value for `voicemail_followup_play_audio_uuid`, length must be less than or equal to `50`")  # noqa: E501

        self._voicemail_followup_play_audio_uuid = voicemail_followup_play_audio_uuid

    @property
    def voicemail_followup_say(self):
        """Gets the voicemail_followup_say of this ConversationPbxVoicemailMailbox.  # noqa: E501

        Voicemail followup say  # noqa: E501

        :return: The voicemail_followup_say of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: str
        """
        return self._voicemail_followup_say

    @voicemail_followup_say.setter
    def voicemail_followup_say(self, voicemail_followup_say):
        """Sets the voicemail_followup_say of this ConversationPbxVoicemailMailbox.

        Voicemail followup say  # noqa: E501

        :param voicemail_followup_say: The voicemail_followup_say of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: str
        """

        self._voicemail_followup_say = voicemail_followup_say

    @property
    def voicemail_followup_say_voice(self):
        """Gets the voicemail_followup_say_voice of this ConversationPbxVoicemailMailbox.  # noqa: E501

        Voicemail followup say voice  # noqa: E501

        :return: The voicemail_followup_say_voice of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: str
        """
        return self._voicemail_followup_say_voice

    @voicemail_followup_say_voice.setter
    def voicemail_followup_say_voice(self, voicemail_followup_say_voice):
        """Sets the voicemail_followup_say_voice of this ConversationPbxVoicemailMailbox.

        Voicemail followup say voice  # noqa: E501

        :param voicemail_followup_say_voice: The voicemail_followup_say_voice of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: str
        """
        allowed_values = ["man", "woman"]  # noqa: E501
        if voicemail_followup_say_voice not in allowed_values:
            raise ValueError(
                "Invalid value for `voicemail_followup_say_voice` ({0}), must be one of {1}"  # noqa: E501
                .format(voicemail_followup_say_voice, allowed_values)
            )

        self._voicemail_followup_say_voice = voicemail_followup_say_voice

    @property
    def voicemail_mailbox_id(self):
        """Gets the voicemail_mailbox_id of this ConversationPbxVoicemailMailbox.  # noqa: E501

        Voicemail mailbox id  # noqa: E501

        :return: The voicemail_mailbox_id of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: str
        """
        return self._voicemail_mailbox_id

    @voicemail_mailbox_id.setter
    def voicemail_mailbox_id(self, voicemail_mailbox_id):
        """Sets the voicemail_mailbox_id of this ConversationPbxVoicemailMailbox.

        Voicemail mailbox id  # noqa: E501

        :param voicemail_mailbox_id: The voicemail_mailbox_id of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: str
        """
        if voicemail_mailbox_id is not None and len(voicemail_mailbox_id) > 50:
            raise ValueError("Invalid value for `voicemail_mailbox_id`, length must be less than or equal to `50`")  # noqa: E501

        self._voicemail_mailbox_id = voicemail_mailbox_id

    @property
    def voicemail_mailbox_type(self):
        """Gets the voicemail_mailbox_type of this ConversationPbxVoicemailMailbox.  # noqa: E501

        Voicemail mailbox type  # noqa: E501

        :return: The voicemail_mailbox_type of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: str
        """
        return self._voicemail_mailbox_type

    @voicemail_mailbox_type.setter
    def voicemail_mailbox_type(self, voicemail_mailbox_type):
        """Sets the voicemail_mailbox_type of this ConversationPbxVoicemailMailbox.

        Voicemail mailbox type  # noqa: E501

        :param voicemail_mailbox_type: The voicemail_mailbox_type of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: str
        """
        allowed_values = ["agent", "shared"]  # noqa: E501
        if voicemail_mailbox_type not in allowed_values:
            raise ValueError(
                "Invalid value for `voicemail_mailbox_type` ({0}), must be one of {1}"  # noqa: E501
                .format(voicemail_mailbox_type, allowed_values)
            )

        self._voicemail_mailbox_type = voicemail_mailbox_type

    @property
    def voicemail_prompt_play_audio_uuid(self):
        """Gets the voicemail_prompt_play_audio_uuid of this ConversationPbxVoicemailMailbox.  # noqa: E501

        Voicemail prompt play audio UUID  # noqa: E501

        :return: The voicemail_prompt_play_audio_uuid of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: str
        """
        return self._voicemail_prompt_play_audio_uuid

    @voicemail_prompt_play_audio_uuid.setter
    def voicemail_prompt_play_audio_uuid(self, voicemail_prompt_play_audio_uuid):
        """Sets the voicemail_prompt_play_audio_uuid of this ConversationPbxVoicemailMailbox.

        Voicemail prompt play audio UUID  # noqa: E501

        :param voicemail_prompt_play_audio_uuid: The voicemail_prompt_play_audio_uuid of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: str
        """
        if voicemail_prompt_play_audio_uuid is not None and len(voicemail_prompt_play_audio_uuid) > 50:
            raise ValueError("Invalid value for `voicemail_prompt_play_audio_uuid`, length must be less than or equal to `50`")  # noqa: E501

        self._voicemail_prompt_play_audio_uuid = voicemail_prompt_play_audio_uuid

    @property
    def voicemail_prompt_say(self):
        """Gets the voicemail_prompt_say of this ConversationPbxVoicemailMailbox.  # noqa: E501

        Voicemail prompt say  # noqa: E501

        :return: The voicemail_prompt_say of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: str
        """
        return self._voicemail_prompt_say

    @voicemail_prompt_say.setter
    def voicemail_prompt_say(self, voicemail_prompt_say):
        """Sets the voicemail_prompt_say of this ConversationPbxVoicemailMailbox.

        Voicemail prompt say  # noqa: E501

        :param voicemail_prompt_say: The voicemail_prompt_say of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: str
        """

        self._voicemail_prompt_say = voicemail_prompt_say

    @property
    def voicemail_prompt_say_voice(self):
        """Gets the voicemail_prompt_say_voice of this ConversationPbxVoicemailMailbox.  # noqa: E501

        Voicemail prompt say voice  # noqa: E501

        :return: The voicemail_prompt_say_voice of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :rtype: str
        """
        return self._voicemail_prompt_say_voice

    @voicemail_prompt_say_voice.setter
    def voicemail_prompt_say_voice(self, voicemail_prompt_say_voice):
        """Sets the voicemail_prompt_say_voice of this ConversationPbxVoicemailMailbox.

        Voicemail prompt say voice  # noqa: E501

        :param voicemail_prompt_say_voice: The voicemail_prompt_say_voice of this ConversationPbxVoicemailMailbox.  # noqa: E501
        :type: str
        """
        allowed_values = ["man", "woman"]  # noqa: E501
        if voicemail_prompt_say_voice not in allowed_values:
            raise ValueError(
                "Invalid value for `voicemail_prompt_say_voice` ({0}), must be one of {1}"  # noqa: E501
                .format(voicemail_prompt_say_voice, allowed_values)
            )

        self._voicemail_prompt_say_voice = voicemail_prompt_say_voice

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConversationPbxVoicemailMailbox, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConversationPbxVoicemailMailbox):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
