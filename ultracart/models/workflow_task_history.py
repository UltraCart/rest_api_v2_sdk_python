# coding: utf-8

"""
    UltraCart Rest API V2

    UltraCart REST API Version 2  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class WorkflowTaskHistory(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'activity_dts': 'str',
        'description': 'str',
        'ip_address': 'str',
        'user': 'WorkflowUser'
    }

    attribute_map = {
        'activity_dts': 'activity_dts',
        'description': 'description',
        'ip_address': 'ip_address',
        'user': 'user'
    }

    def __init__(self, activity_dts=None, description=None, ip_address=None, user=None):  # noqa: E501
        """WorkflowTaskHistory - a model defined in Swagger"""  # noqa: E501

        self._activity_dts = None
        self._description = None
        self._ip_address = None
        self._user = None
        self.discriminator = None

        if activity_dts is not None:
            self.activity_dts = activity_dts
        if description is not None:
            self.description = description
        if ip_address is not None:
            self.ip_address = ip_address
        if user is not None:
            self.user = user

    @property
    def activity_dts(self):
        """Gets the activity_dts of this WorkflowTaskHistory.  # noqa: E501

        Date/time that the workflow task history record was created  # noqa: E501

        :return: The activity_dts of this WorkflowTaskHistory.  # noqa: E501
        :rtype: str
        """
        return self._activity_dts

    @activity_dts.setter
    def activity_dts(self, activity_dts):
        """Sets the activity_dts of this WorkflowTaskHistory.

        Date/time that the workflow task history record was created  # noqa: E501

        :param activity_dts: The activity_dts of this WorkflowTaskHistory.  # noqa: E501
        :type: str
        """

        self._activity_dts = activity_dts

    @property
    def description(self):
        """Gets the description of this WorkflowTaskHistory.  # noqa: E501

        Description of the activity  # noqa: E501

        :return: The description of this WorkflowTaskHistory.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this WorkflowTaskHistory.

        Description of the activity  # noqa: E501

        :param description: The description of this WorkflowTaskHistory.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def ip_address(self):
        """Gets the ip_address of this WorkflowTaskHistory.  # noqa: E501

        IP Address that originated the activity  # noqa: E501

        :return: The ip_address of this WorkflowTaskHistory.  # noqa: E501
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this WorkflowTaskHistory.

        IP Address that originated the activity  # noqa: E501

        :param ip_address: The ip_address of this WorkflowTaskHistory.  # noqa: E501
        :type: str
        """

        self._ip_address = ip_address

    @property
    def user(self):
        """Gets the user of this WorkflowTaskHistory.  # noqa: E501


        :return: The user of this WorkflowTaskHistory.  # noqa: E501
        :rtype: WorkflowUser
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this WorkflowTaskHistory.


        :param user: The user of this WorkflowTaskHistory.  # noqa: E501
        :type: WorkflowUser
        """

        self._user = user

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WorkflowTaskHistory, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WorkflowTaskHistory):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
