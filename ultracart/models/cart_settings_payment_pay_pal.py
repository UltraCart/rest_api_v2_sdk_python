# coding: utf-8

"""
    UltraCart Rest API V2

    This is the next generation UltraCart REST API...

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class CartSettingsPaymentPayPal(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, paypal_button_alt_text=None, paypal_button_url=None, paypal_credit_button_url=None, paypal_credit_legal_image_url=None, paypal_credit_legal_url=None):
        """
        CartSettingsPaymentPayPal - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'paypal_button_alt_text': 'str',
            'paypal_button_url': 'str',
            'paypal_credit_button_url': 'str',
            'paypal_credit_legal_image_url': 'str',
            'paypal_credit_legal_url': 'str'
        }

        self.attribute_map = {
            'paypal_button_alt_text': 'paypal_button_alt_text',
            'paypal_button_url': 'paypal_button_url',
            'paypal_credit_button_url': 'paypal_credit_button_url',
            'paypal_credit_legal_image_url': 'paypal_credit_legal_image_url',
            'paypal_credit_legal_url': 'paypal_credit_legal_url'
        }

        self._paypal_button_alt_text = paypal_button_alt_text
        self._paypal_button_url = paypal_button_url
        self._paypal_credit_button_url = paypal_credit_button_url
        self._paypal_credit_legal_image_url = paypal_credit_legal_image_url
        self._paypal_credit_legal_url = paypal_credit_legal_url

    @property
    def paypal_button_alt_text(self):
        """
        Gets the paypal_button_alt_text of this CartSettingsPaymentPayPal.
        PayPal button alt text

        :return: The paypal_button_alt_text of this CartSettingsPaymentPayPal.
        :rtype: str
        """
        return self._paypal_button_alt_text

    @paypal_button_alt_text.setter
    def paypal_button_alt_text(self, paypal_button_alt_text):
        """
        Sets the paypal_button_alt_text of this CartSettingsPaymentPayPal.
        PayPal button alt text

        :param paypal_button_alt_text: The paypal_button_alt_text of this CartSettingsPaymentPayPal.
        :type: str
        """

        self._paypal_button_alt_text = paypal_button_alt_text

    @property
    def paypal_button_url(self):
        """
        Gets the paypal_button_url of this CartSettingsPaymentPayPal.
        PayPal button URL

        :return: The paypal_button_url of this CartSettingsPaymentPayPal.
        :rtype: str
        """
        return self._paypal_button_url

    @paypal_button_url.setter
    def paypal_button_url(self, paypal_button_url):
        """
        Sets the paypal_button_url of this CartSettingsPaymentPayPal.
        PayPal button URL

        :param paypal_button_url: The paypal_button_url of this CartSettingsPaymentPayPal.
        :type: str
        """

        self._paypal_button_url = paypal_button_url

    @property
    def paypal_credit_button_url(self):
        """
        Gets the paypal_credit_button_url of this CartSettingsPaymentPayPal.
        PayPal Credit button URL

        :return: The paypal_credit_button_url of this CartSettingsPaymentPayPal.
        :rtype: str
        """
        return self._paypal_credit_button_url

    @paypal_credit_button_url.setter
    def paypal_credit_button_url(self, paypal_credit_button_url):
        """
        Sets the paypal_credit_button_url of this CartSettingsPaymentPayPal.
        PayPal Credit button URL

        :param paypal_credit_button_url: The paypal_credit_button_url of this CartSettingsPaymentPayPal.
        :type: str
        """

        self._paypal_credit_button_url = paypal_credit_button_url

    @property
    def paypal_credit_legal_image_url(self):
        """
        Gets the paypal_credit_legal_image_url of this CartSettingsPaymentPayPal.
        PayPal Credit legal image URL

        :return: The paypal_credit_legal_image_url of this CartSettingsPaymentPayPal.
        :rtype: str
        """
        return self._paypal_credit_legal_image_url

    @paypal_credit_legal_image_url.setter
    def paypal_credit_legal_image_url(self, paypal_credit_legal_image_url):
        """
        Sets the paypal_credit_legal_image_url of this CartSettingsPaymentPayPal.
        PayPal Credit legal image URL

        :param paypal_credit_legal_image_url: The paypal_credit_legal_image_url of this CartSettingsPaymentPayPal.
        :type: str
        """

        self._paypal_credit_legal_image_url = paypal_credit_legal_image_url

    @property
    def paypal_credit_legal_url(self):
        """
        Gets the paypal_credit_legal_url of this CartSettingsPaymentPayPal.
        PayPal Credit legal URL

        :return: The paypal_credit_legal_url of this CartSettingsPaymentPayPal.
        :rtype: str
        """
        return self._paypal_credit_legal_url

    @paypal_credit_legal_url.setter
    def paypal_credit_legal_url(self, paypal_credit_legal_url):
        """
        Sets the paypal_credit_legal_url of this CartSettingsPaymentPayPal.
        PayPal Credit legal URL

        :param paypal_credit_legal_url: The paypal_credit_legal_url of this CartSettingsPaymentPayPal.
        :type: str
        """

        self._paypal_credit_legal_url = paypal_credit_legal_url

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
