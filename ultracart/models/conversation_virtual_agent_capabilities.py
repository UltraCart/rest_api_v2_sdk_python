# coding: utf-8

"""
    UltraCart Rest API V2

    UltraCart REST API Version 2  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ConversationVirtualAgentCapabilities(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'access_storefront_and_item': 'bool',
        'cancel_subscription': 'bool',
        'delay_subscription': 'bool',
        'lookup_order_information': 'bool',
        'lookup_subscription_information': 'bool',
        'open_support_ticket': 'bool',
        'open_support_ticket_channel': 'str',
        'open_support_ticket_channel_email': 'str',
        'open_support_ticket_zoho_desk_department_id': 'str',
        'pause_subscription': 'bool',
        'resume_subscription': 'bool',
        'transfer_chat_to_live_agent': 'bool',
        'update_subscription_credit_card': 'bool',
        'zoho_desk_available': 'bool',
        'zoho_desk_departments': 'list[ConversationVirtualAgentCapabilityZohoDeskDepartment]'
    }

    attribute_map = {
        'access_storefront_and_item': 'access_storefront_and_item',
        'cancel_subscription': 'cancel_subscription',
        'delay_subscription': 'delay_subscription',
        'lookup_order_information': 'lookup_order_information',
        'lookup_subscription_information': 'lookup_subscription_information',
        'open_support_ticket': 'open_support_ticket',
        'open_support_ticket_channel': 'open_support_ticket_channel',
        'open_support_ticket_channel_email': 'open_support_ticket_channel_email',
        'open_support_ticket_zoho_desk_department_id': 'open_support_ticket_zoho_desk_department_id',
        'pause_subscription': 'pause_subscription',
        'resume_subscription': 'resume_subscription',
        'transfer_chat_to_live_agent': 'transfer_chat_to_live_agent',
        'update_subscription_credit_card': 'update_subscription_credit_card',
        'zoho_desk_available': 'zoho_desk_available',
        'zoho_desk_departments': 'zoho_desk_departments'
    }

    def __init__(self, access_storefront_and_item=None, cancel_subscription=None, delay_subscription=None, lookup_order_information=None, lookup_subscription_information=None, open_support_ticket=None, open_support_ticket_channel=None, open_support_ticket_channel_email=None, open_support_ticket_zoho_desk_department_id=None, pause_subscription=None, resume_subscription=None, transfer_chat_to_live_agent=None, update_subscription_credit_card=None, zoho_desk_available=None, zoho_desk_departments=None):  # noqa: E501
        """ConversationVirtualAgentCapabilities - a model defined in Swagger"""  # noqa: E501

        self._access_storefront_and_item = None
        self._cancel_subscription = None
        self._delay_subscription = None
        self._lookup_order_information = None
        self._lookup_subscription_information = None
        self._open_support_ticket = None
        self._open_support_ticket_channel = None
        self._open_support_ticket_channel_email = None
        self._open_support_ticket_zoho_desk_department_id = None
        self._pause_subscription = None
        self._resume_subscription = None
        self._transfer_chat_to_live_agent = None
        self._update_subscription_credit_card = None
        self._zoho_desk_available = None
        self._zoho_desk_departments = None
        self.discriminator = None

        if access_storefront_and_item is not None:
            self.access_storefront_and_item = access_storefront_and_item
        if cancel_subscription is not None:
            self.cancel_subscription = cancel_subscription
        if delay_subscription is not None:
            self.delay_subscription = delay_subscription
        if lookup_order_information is not None:
            self.lookup_order_information = lookup_order_information
        if lookup_subscription_information is not None:
            self.lookup_subscription_information = lookup_subscription_information
        if open_support_ticket is not None:
            self.open_support_ticket = open_support_ticket
        if open_support_ticket_channel is not None:
            self.open_support_ticket_channel = open_support_ticket_channel
        if open_support_ticket_channel_email is not None:
            self.open_support_ticket_channel_email = open_support_ticket_channel_email
        if open_support_ticket_zoho_desk_department_id is not None:
            self.open_support_ticket_zoho_desk_department_id = open_support_ticket_zoho_desk_department_id
        if pause_subscription is not None:
            self.pause_subscription = pause_subscription
        if resume_subscription is not None:
            self.resume_subscription = resume_subscription
        if transfer_chat_to_live_agent is not None:
            self.transfer_chat_to_live_agent = transfer_chat_to_live_agent
        if update_subscription_credit_card is not None:
            self.update_subscription_credit_card = update_subscription_credit_card
        if zoho_desk_available is not None:
            self.zoho_desk_available = zoho_desk_available
        if zoho_desk_departments is not None:
            self.zoho_desk_departments = zoho_desk_departments

    @property
    def access_storefront_and_item(self):
        """Gets the access_storefront_and_item of this ConversationVirtualAgentCapabilities.  # noqa: E501

        Permission flag to allow this Agent access to the storefront and item information.  # noqa: E501

        :return: The access_storefront_and_item of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: bool
        """
        return self._access_storefront_and_item

    @access_storefront_and_item.setter
    def access_storefront_and_item(self, access_storefront_and_item):
        """Sets the access_storefront_and_item of this ConversationVirtualAgentCapabilities.

        Permission flag to allow this Agent access to the storefront and item information.  # noqa: E501

        :param access_storefront_and_item: The access_storefront_and_item of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: bool
        """

        self._access_storefront_and_item = access_storefront_and_item

    @property
    def cancel_subscription(self):
        """Gets the cancel_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501


        :return: The cancel_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: bool
        """
        return self._cancel_subscription

    @cancel_subscription.setter
    def cancel_subscription(self, cancel_subscription):
        """Sets the cancel_subscription of this ConversationVirtualAgentCapabilities.


        :param cancel_subscription: The cancel_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: bool
        """

        self._cancel_subscription = cancel_subscription

    @property
    def delay_subscription(self):
        """Gets the delay_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501


        :return: The delay_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: bool
        """
        return self._delay_subscription

    @delay_subscription.setter
    def delay_subscription(self, delay_subscription):
        """Sets the delay_subscription of this ConversationVirtualAgentCapabilities.


        :param delay_subscription: The delay_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: bool
        """

        self._delay_subscription = delay_subscription

    @property
    def lookup_order_information(self):
        """Gets the lookup_order_information of this ConversationVirtualAgentCapabilities.  # noqa: E501


        :return: The lookup_order_information of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: bool
        """
        return self._lookup_order_information

    @lookup_order_information.setter
    def lookup_order_information(self, lookup_order_information):
        """Sets the lookup_order_information of this ConversationVirtualAgentCapabilities.


        :param lookup_order_information: The lookup_order_information of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: bool
        """

        self._lookup_order_information = lookup_order_information

    @property
    def lookup_subscription_information(self):
        """Gets the lookup_subscription_information of this ConversationVirtualAgentCapabilities.  # noqa: E501


        :return: The lookup_subscription_information of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: bool
        """
        return self._lookup_subscription_information

    @lookup_subscription_information.setter
    def lookup_subscription_information(self, lookup_subscription_information):
        """Sets the lookup_subscription_information of this ConversationVirtualAgentCapabilities.


        :param lookup_subscription_information: The lookup_subscription_information of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: bool
        """

        self._lookup_subscription_information = lookup_subscription_information

    @property
    def open_support_ticket(self):
        """Gets the open_support_ticket of this ConversationVirtualAgentCapabilities.  # noqa: E501


        :return: The open_support_ticket of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: bool
        """
        return self._open_support_ticket

    @open_support_ticket.setter
    def open_support_ticket(self, open_support_ticket):
        """Sets the open_support_ticket of this ConversationVirtualAgentCapabilities.


        :param open_support_ticket: The open_support_ticket of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: bool
        """

        self._open_support_ticket = open_support_ticket

    @property
    def open_support_ticket_channel(self):
        """Gets the open_support_ticket_channel of this ConversationVirtualAgentCapabilities.  # noqa: E501

        Channel to use to open the support ticket  # noqa: E501

        :return: The open_support_ticket_channel of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: str
        """
        return self._open_support_ticket_channel

    @open_support_ticket_channel.setter
    def open_support_ticket_channel(self, open_support_ticket_channel):
        """Sets the open_support_ticket_channel of this ConversationVirtualAgentCapabilities.

        Channel to use to open the support ticket  # noqa: E501

        :param open_support_ticket_channel: The open_support_ticket_channel of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: str
        """
        allowed_values = ["none", "email", "ultracart_task", "zoho_desk_ticket"]  # noqa: E501
        if open_support_ticket_channel not in allowed_values:
            raise ValueError(
                "Invalid value for `open_support_ticket_channel` ({0}), must be one of {1}"  # noqa: E501
                .format(open_support_ticket_channel, allowed_values)
            )

        self._open_support_ticket_channel = open_support_ticket_channel

    @property
    def open_support_ticket_channel_email(self):
        """Gets the open_support_ticket_channel_email of this ConversationVirtualAgentCapabilities.  # noqa: E501

        Email to send support ticket to  # noqa: E501

        :return: The open_support_ticket_channel_email of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: str
        """
        return self._open_support_ticket_channel_email

    @open_support_ticket_channel_email.setter
    def open_support_ticket_channel_email(self, open_support_ticket_channel_email):
        """Sets the open_support_ticket_channel_email of this ConversationVirtualAgentCapabilities.

        Email to send support ticket to  # noqa: E501

        :param open_support_ticket_channel_email: The open_support_ticket_channel_email of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: str
        """

        self._open_support_ticket_channel_email = open_support_ticket_channel_email

    @property
    def open_support_ticket_zoho_desk_department_id(self):
        """Gets the open_support_ticket_zoho_desk_department_id of this ConversationVirtualAgentCapabilities.  # noqa: E501

        Department ID to open a Zoho Desk ticket for  # noqa: E501

        :return: The open_support_ticket_zoho_desk_department_id of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: str
        """
        return self._open_support_ticket_zoho_desk_department_id

    @open_support_ticket_zoho_desk_department_id.setter
    def open_support_ticket_zoho_desk_department_id(self, open_support_ticket_zoho_desk_department_id):
        """Sets the open_support_ticket_zoho_desk_department_id of this ConversationVirtualAgentCapabilities.

        Department ID to open a Zoho Desk ticket for  # noqa: E501

        :param open_support_ticket_zoho_desk_department_id: The open_support_ticket_zoho_desk_department_id of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: str
        """

        self._open_support_ticket_zoho_desk_department_id = open_support_ticket_zoho_desk_department_id

    @property
    def pause_subscription(self):
        """Gets the pause_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501


        :return: The pause_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: bool
        """
        return self._pause_subscription

    @pause_subscription.setter
    def pause_subscription(self, pause_subscription):
        """Sets the pause_subscription of this ConversationVirtualAgentCapabilities.


        :param pause_subscription: The pause_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: bool
        """

        self._pause_subscription = pause_subscription

    @property
    def resume_subscription(self):
        """Gets the resume_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501


        :return: The resume_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: bool
        """
        return self._resume_subscription

    @resume_subscription.setter
    def resume_subscription(self, resume_subscription):
        """Sets the resume_subscription of this ConversationVirtualAgentCapabilities.


        :param resume_subscription: The resume_subscription of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: bool
        """

        self._resume_subscription = resume_subscription

    @property
    def transfer_chat_to_live_agent(self):
        """Gets the transfer_chat_to_live_agent of this ConversationVirtualAgentCapabilities.  # noqa: E501


        :return: The transfer_chat_to_live_agent of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: bool
        """
        return self._transfer_chat_to_live_agent

    @transfer_chat_to_live_agent.setter
    def transfer_chat_to_live_agent(self, transfer_chat_to_live_agent):
        """Sets the transfer_chat_to_live_agent of this ConversationVirtualAgentCapabilities.


        :param transfer_chat_to_live_agent: The transfer_chat_to_live_agent of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: bool
        """

        self._transfer_chat_to_live_agent = transfer_chat_to_live_agent

    @property
    def update_subscription_credit_card(self):
        """Gets the update_subscription_credit_card of this ConversationVirtualAgentCapabilities.  # noqa: E501


        :return: The update_subscription_credit_card of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: bool
        """
        return self._update_subscription_credit_card

    @update_subscription_credit_card.setter
    def update_subscription_credit_card(self, update_subscription_credit_card):
        """Sets the update_subscription_credit_card of this ConversationVirtualAgentCapabilities.


        :param update_subscription_credit_card: The update_subscription_credit_card of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: bool
        """

        self._update_subscription_credit_card = update_subscription_credit_card

    @property
    def zoho_desk_available(self):
        """Gets the zoho_desk_available of this ConversationVirtualAgentCapabilities.  # noqa: E501

        True if Zoho Desk is connected to UltraCart  # noqa: E501

        :return: The zoho_desk_available of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: bool
        """
        return self._zoho_desk_available

    @zoho_desk_available.setter
    def zoho_desk_available(self, zoho_desk_available):
        """Sets the zoho_desk_available of this ConversationVirtualAgentCapabilities.

        True if Zoho Desk is connected to UltraCart  # noqa: E501

        :param zoho_desk_available: The zoho_desk_available of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: bool
        """

        self._zoho_desk_available = zoho_desk_available

    @property
    def zoho_desk_departments(self):
        """Gets the zoho_desk_departments of this ConversationVirtualAgentCapabilities.  # noqa: E501

        Array of Zoho Desk Department if zoho desk is connected to UltraCart  # noqa: E501

        :return: The zoho_desk_departments of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :rtype: list[ConversationVirtualAgentCapabilityZohoDeskDepartment]
        """
        return self._zoho_desk_departments

    @zoho_desk_departments.setter
    def zoho_desk_departments(self, zoho_desk_departments):
        """Sets the zoho_desk_departments of this ConversationVirtualAgentCapabilities.

        Array of Zoho Desk Department if zoho desk is connected to UltraCart  # noqa: E501

        :param zoho_desk_departments: The zoho_desk_departments of this ConversationVirtualAgentCapabilities.  # noqa: E501
        :type: list[ConversationVirtualAgentCapabilityZohoDeskDepartment]
        """

        self._zoho_desk_departments = zoho_desk_departments

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ConversationVirtualAgentCapabilities, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConversationVirtualAgentCapabilities):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
