# coding: utf-8

"""
    UltraCart Rest API V2

    UltraCart REST API Version 2  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: support@ultracart.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class IntegrationLogQueryFilterValues(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'actions': 'list[str]',
        'directions': 'list[str]',
        'emails': 'list[str]',
        'file_names': 'list[str]',
        'item_ids': 'list[str]',
        'item_ipn_oids': 'list[int]',
        'log_types': 'list[str]',
        'logger_names': 'list[str]',
        'order_ids': 'list[str]',
        'statuses': 'list[str]'
    }

    attribute_map = {
        'actions': 'actions',
        'directions': 'directions',
        'emails': 'emails',
        'file_names': 'file_names',
        'item_ids': 'item_ids',
        'item_ipn_oids': 'item_ipn_oids',
        'log_types': 'log_types',
        'logger_names': 'logger_names',
        'order_ids': 'order_ids',
        'statuses': 'statuses'
    }

    def __init__(self, actions=None, directions=None, emails=None, file_names=None, item_ids=None, item_ipn_oids=None, log_types=None, logger_names=None, order_ids=None, statuses=None):  # noqa: E501
        """IntegrationLogQueryFilterValues - a model defined in Swagger"""  # noqa: E501

        self._actions = None
        self._directions = None
        self._emails = None
        self._file_names = None
        self._item_ids = None
        self._item_ipn_oids = None
        self._log_types = None
        self._logger_names = None
        self._order_ids = None
        self._statuses = None
        self.discriminator = None

        if actions is not None:
            self.actions = actions
        if directions is not None:
            self.directions = directions
        if emails is not None:
            self.emails = emails
        if file_names is not None:
            self.file_names = file_names
        if item_ids is not None:
            self.item_ids = item_ids
        if item_ipn_oids is not None:
            self.item_ipn_oids = item_ipn_oids
        if log_types is not None:
            self.log_types = log_types
        if logger_names is not None:
            self.logger_names = logger_names
        if order_ids is not None:
            self.order_ids = order_ids
        if statuses is not None:
            self.statuses = statuses

    @property
    def actions(self):
        """Gets the actions of this IntegrationLogQueryFilterValues.  # noqa: E501


        :return: The actions of this IntegrationLogQueryFilterValues.  # noqa: E501
        :rtype: list[str]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this IntegrationLogQueryFilterValues.


        :param actions: The actions of this IntegrationLogQueryFilterValues.  # noqa: E501
        :type: list[str]
        """

        self._actions = actions

    @property
    def directions(self):
        """Gets the directions of this IntegrationLogQueryFilterValues.  # noqa: E501


        :return: The directions of this IntegrationLogQueryFilterValues.  # noqa: E501
        :rtype: list[str]
        """
        return self._directions

    @directions.setter
    def directions(self, directions):
        """Sets the directions of this IntegrationLogQueryFilterValues.


        :param directions: The directions of this IntegrationLogQueryFilterValues.  # noqa: E501
        :type: list[str]
        """

        self._directions = directions

    @property
    def emails(self):
        """Gets the emails of this IntegrationLogQueryFilterValues.  # noqa: E501


        :return: The emails of this IntegrationLogQueryFilterValues.  # noqa: E501
        :rtype: list[str]
        """
        return self._emails

    @emails.setter
    def emails(self, emails):
        """Sets the emails of this IntegrationLogQueryFilterValues.


        :param emails: The emails of this IntegrationLogQueryFilterValues.  # noqa: E501
        :type: list[str]
        """

        self._emails = emails

    @property
    def file_names(self):
        """Gets the file_names of this IntegrationLogQueryFilterValues.  # noqa: E501


        :return: The file_names of this IntegrationLogQueryFilterValues.  # noqa: E501
        :rtype: list[str]
        """
        return self._file_names

    @file_names.setter
    def file_names(self, file_names):
        """Sets the file_names of this IntegrationLogQueryFilterValues.


        :param file_names: The file_names of this IntegrationLogQueryFilterValues.  # noqa: E501
        :type: list[str]
        """

        self._file_names = file_names

    @property
    def item_ids(self):
        """Gets the item_ids of this IntegrationLogQueryFilterValues.  # noqa: E501


        :return: The item_ids of this IntegrationLogQueryFilterValues.  # noqa: E501
        :rtype: list[str]
        """
        return self._item_ids

    @item_ids.setter
    def item_ids(self, item_ids):
        """Sets the item_ids of this IntegrationLogQueryFilterValues.


        :param item_ids: The item_ids of this IntegrationLogQueryFilterValues.  # noqa: E501
        :type: list[str]
        """

        self._item_ids = item_ids

    @property
    def item_ipn_oids(self):
        """Gets the item_ipn_oids of this IntegrationLogQueryFilterValues.  # noqa: E501


        :return: The item_ipn_oids of this IntegrationLogQueryFilterValues.  # noqa: E501
        :rtype: list[int]
        """
        return self._item_ipn_oids

    @item_ipn_oids.setter
    def item_ipn_oids(self, item_ipn_oids):
        """Sets the item_ipn_oids of this IntegrationLogQueryFilterValues.


        :param item_ipn_oids: The item_ipn_oids of this IntegrationLogQueryFilterValues.  # noqa: E501
        :type: list[int]
        """

        self._item_ipn_oids = item_ipn_oids

    @property
    def log_types(self):
        """Gets the log_types of this IntegrationLogQueryFilterValues.  # noqa: E501


        :return: The log_types of this IntegrationLogQueryFilterValues.  # noqa: E501
        :rtype: list[str]
        """
        return self._log_types

    @log_types.setter
    def log_types(self, log_types):
        """Sets the log_types of this IntegrationLogQueryFilterValues.


        :param log_types: The log_types of this IntegrationLogQueryFilterValues.  # noqa: E501
        :type: list[str]
        """

        self._log_types = log_types

    @property
    def logger_names(self):
        """Gets the logger_names of this IntegrationLogQueryFilterValues.  # noqa: E501


        :return: The logger_names of this IntegrationLogQueryFilterValues.  # noqa: E501
        :rtype: list[str]
        """
        return self._logger_names

    @logger_names.setter
    def logger_names(self, logger_names):
        """Sets the logger_names of this IntegrationLogQueryFilterValues.


        :param logger_names: The logger_names of this IntegrationLogQueryFilterValues.  # noqa: E501
        :type: list[str]
        """

        self._logger_names = logger_names

    @property
    def order_ids(self):
        """Gets the order_ids of this IntegrationLogQueryFilterValues.  # noqa: E501


        :return: The order_ids of this IntegrationLogQueryFilterValues.  # noqa: E501
        :rtype: list[str]
        """
        return self._order_ids

    @order_ids.setter
    def order_ids(self, order_ids):
        """Sets the order_ids of this IntegrationLogQueryFilterValues.


        :param order_ids: The order_ids of this IntegrationLogQueryFilterValues.  # noqa: E501
        :type: list[str]
        """

        self._order_ids = order_ids

    @property
    def statuses(self):
        """Gets the statuses of this IntegrationLogQueryFilterValues.  # noqa: E501


        :return: The statuses of this IntegrationLogQueryFilterValues.  # noqa: E501
        :rtype: list[str]
        """
        return self._statuses

    @statuses.setter
    def statuses(self, statuses):
        """Sets the statuses of this IntegrationLogQueryFilterValues.


        :param statuses: The statuses of this IntegrationLogQueryFilterValues.  # noqa: E501
        :type: list[str]
        """

        self._statuses = statuses

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IntegrationLogQueryFilterValues, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IntegrationLogQueryFilterValues):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
